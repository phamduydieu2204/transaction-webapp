scripts/business/dataAnalytics.js:14:  console.log("📊 Calculating business metrics for period:", dateRange);
scripts/business/dataAnalytics.js:354:    console.log('📊 Growth calculation:', {
scripts/business/overviewGenerator.js:208:  console.log("✅ Business dashboard interactivity added");
scripts/business/overviewGenerator.js:231:  console.log("✅ Tooltips initialized for", tooltipElements.length, "elements");
scripts/cash-flow/dataManagers.js:159:    console.log('📦 Using cached report data');
scripts/cash-flow/dataManagers.js:163:  console.log('🔄 Fetching fresh report data');
scripts/cash-flow/reportUtilities.js:32:    console.log('📊 Charts would be initialized here');
scripts/cash-flow/reportUtilities.js:282:  console.log('📄 PDF export would be implemented here', { reportData, filename });
scripts/cash-flow/reportUtilities.js:290:  console.log('📊 Excel export would be implemented here', { reportData, filename });
scripts/cashFlowVsAccrualReport.js:31:  console.log("💰 Rendering Cash Flow vs Accrual Report:", {
scripts/confirmModal.js:2:    console.log("Mở modal xác nhận:", message);
scripts/confirmModal.js:11:    console.log("Đóng modal xác nhận");
scripts/confirmModal.js:18:    console.log("Kết quả xác nhận:", result);
scripts/core/appInitializer.js:46:  console.log('✅ Global variables initialized');
scripts/core/appInitializer.js:68:  console.log('✅ User information loaded:', {
scripts/core/appInitializer.js:91:  console.log('✅ UI elements initialized');
scripts/core/appInitializer.js:98:  console.log('🚀 Loading initial data...');
scripts/core/appInitializer.js:103:      console.log('⚡ Using ULTRA-FAST mode for performance');
scripts/core/appInitializer.js:106:        console.log('✅ Ultra-fast initialization complete');
scripts/core/appInitializer.js:113:    console.log('🚀 Phase 1: Loading critical data...');
scripts/core/appInitializer.js:118:    console.log('✅ Software data loaded');
scripts/core/appInitializer.js:121:    console.log('🚀 Phase 2: Loading tab-specific data...');
scripts/core/appInitializer.js:131:    console.log('✅ Transaction and expense data loaded');
scripts/core/appInitializer.js:134:    console.log('🚀 Phase 3: Initializing minimal features...');
scripts/core/appInitializer.js:136:    console.log('✅ Minimal features initialized');
scripts/core/appInitializer.js:138:    console.log('✅ Initial data loaded successfully (optimized)');
scripts/core/appInitializer.js:159:    console.log('✅ Software data loaded');
scripts/core/appInitializer.js:170:  console.log('📊 Loading transaction data (optimized)...');
scripts/core/appInitializer.js:200:    console.log('✅ Initial transaction data loaded');
scripts/core/appInitializer.js:205:        console.log('🔄 Preloading additional transaction data...');
scripts/core/appInitializer.js:231:  console.log('📊 Loading expense data...');
scripts/core/appInitializer.js:264:      console.log(`✅ Loaded ${window.expenseList.length} expenses`);
scripts/core/appInitializer.js:280:  console.log('⚡ Initializing minimal features...');
scripts/core/appInitializer.js:304:    console.log('✅ Minimal features initialized');
scripts/core/appInitializer.js:315:  console.log('📈 Initializing heavy features in background...');
scripts/core/appInitializer.js:322:    console.log('📊 Heavy features available for lazy loading');
scripts/core/appInitializer.js:345:    console.log('✅ Expense features initialized');
scripts/core/appInitializer.js:391:  console.log('✅ Error handling setup complete');
scripts/core/appInitializer.js:405:    console.log('✅ Constants initialized');
scripts/core/appInitializer.js:421:    console.log('🔧 Development mode enabled');
scripts/core/appInitializer.js:438:        console.log(`📊 Page load time: ${loadTime}ms`);
scripts/core/appInitializer.js:449:  console.log('🚀 Starting application initialization...');
scripts/core/appInitializer.js:474:    console.log('✅ Application initialization complete');
scripts/core/appInitializer.js:495:  console.log('🧹 Cleaning up application...');
scripts/core/appInitializer.js:511:  console.log('✅ Application cleanup complete');
scripts/core/authManager.js:56:    console.log('User logged in:', userData.username);
scripts/core/authManager.js:83:    console.log('User logged out');
scripts/core/authManager.js:120:    console.log('🔐 Checking session validity...');
scripts/core/authManager.js:122:        console.log('❌ Session invalid: No auth data or expiry time');
scripts/core/authManager.js:128:    console.log(`🔐 Session expiry: ${new Date(authData.expiryTime).toLocaleString()}`);
scripts/core/authManager.js:129:    console.log(`🔐 Current time: ${new Date(now).toLocaleString()}`);
scripts/core/authManager.js:130:    console.log(`🔐 Session valid: ${isValid}`);
scripts/core/authManager.js:145:        console.log('Session restored for:', authData.user.username);
scripts/core/authManager.js:165:        console.log('🔍 Looking for auth data with key:', AUTH_STORAGE_KEY);
scripts/core/authManager.js:167:        console.log('🔍 Raw auth data:', data ? `Found (${data.length} chars)` : 'Not found');
scripts/core/authManager.js:258:        console.log('📱 AuthManager: Loading session...');
scripts/core/authManager.js:260:        console.log('📱 AuthManager: Auth data from storage:', auth ? 'Found' : 'Not found');
scripts/core/authManager.js:263:            console.log('✅ AuthManager: Session is valid');
scripts/core/authManager.js:270:        console.log('❌ AuthManager: No valid session');
scripts/core/cacheManager.js:74:    console.log('🧹 Transaction caches cleared');
scripts/core/cacheManager.js:89:    console.log('🧹 Expense caches cleared');
scripts/core/dataMapping.js:92:  //   console.log(`🔍 Looking for ${fieldName}:`, {
scripts/core/dataMapping.js:103:      //   console.log(`✅ Found ${fieldName} with key "${key}":`, transaction[key]);
scripts/core/dataMapping.js:110:  //   console.log(`❌ No value found for ${fieldName}`);
scripts/core/dataMapping.js:161:  //   console.log('🔍 Normalized transaction:', {
scripts/core/domOptimizer.js:206:      console.log('Input changed:', e.target.value);
scripts/core/eventManager.js:52:  console.log('🎯 Setting up form handlers...');
scripts/core/eventManager.js:63:  console.log('✅ Form handlers setup complete');
scripts/core/eventManager.js:185:  console.log('📄 Setting up pagination handlers...');
scripts/core/eventManager.js:224:  console.log('✅ Pagination handlers setup complete');
scripts/core/eventManager.js:231:  console.log('⌨️ Setting up keyboard shortcuts...');
scripts/core/eventManager.js:279:  console.log('✅ Keyboard shortcuts setup complete');
scripts/core/eventManager.js:286:  console.log('🔔 Setting up modal handlers...');
scripts/core/eventManager.js:313:  console.log('✅ Modal handlers setup complete');
scripts/core/eventManager.js:320:  console.log('📱 Setting up responsive handlers...');
scripts/core/eventManager.js:335:  console.log('✅ Responsive handlers setup complete');
scripts/core/eventManager.js:370:    console.log('📊 Setting up performance monitoring...');
scripts/core/eventManager.js:386:    console.log('✅ Performance monitoring setup complete');
scripts/core/eventManager.js:394:  console.log('🎯 Initializing event handlers...');
scripts/core/eventManager.js:404:    console.log('✅ All event handlers initialized successfully');
scripts/core/eventManager.js:416:  console.log('🧹 Cleaning up event handlers...');
scripts/core/eventManager.js:430:  console.log('✅ Event handlers cleanup complete');
scripts/core/navigationManager.js:94:  console.log('🧭 Initializing navigation manager...');
scripts/core/navigationManager.js:109:    console.log('✅ Navigation manager initialized');
scripts/core/navigationManager.js:132:  console.log('✅ Tab handlers setup complete');
scripts/core/navigationManager.js:147:  console.log(`🔄 Switching to tab: ${tabName}`);
scripts/core/navigationManager.js:167:        console.log(`🔄 Redirecting to allowed tab: ${allowedTab}`);
scripts/core/navigationManager.js:201:      console.log(`✅ Successfully switched to tab: ${tabName}`);
scripts/core/navigationManager.js:280:    console.log(`💾 Intended tab from URL: ${intendedTab}`);
scripts/core/navigationManager.js:299:    console.log(`🎯 Initial tab loaded (authenticated): ${allowedTab}`);
scripts/core/navigationManager.js:302:    console.log(`🔐 User not authenticated, saving intended tab: ${validTab}`);
scripts/core/navigationManager.js:494:      console.log(`✅ Tab ${tabName} initialized`);
scripts/core/navigationManager.js:534:  console.log('🎯 Switching to intended tab after authentication...');
scripts/core/navigationManager.js:548:  console.log(`🔄 Switching to tab after auth: ${allowedTab} (requested: ${validTab})`);
scripts/core/requestOptimizer.js:25:    console.log(`🔄 Reusing in-flight request for: ${key}`);
scripts/core/requestOptimizer.js:33:      console.log(`📦 Using cached response for: ${key}`);
scripts/core/requestOptimizer.js:39:  console.log(`🚀 Making new request for: ${key}`);
scripts/core/requestOptimizer.js:66:    console.log(`🧹 Cleared cache for: ${key}`);
scripts/core/requestOptimizer.js:69:    console.log('🧹 Cleared all request cache');
scripts/core/requestOptimizer.js:122:      console.log(`🎯 Processing batch of ${items.length} requests`);
scripts/core/sessionValidator.js:41:  console.log('🚪 Handling legacy user logout...');
scripts/core/sessionValidator.js:69:  console.log('🔐 Initializing session validation system...');
scripts/core/sessionValidator.js:78:  console.log('✅ Session validation enabled');
scripts/core/sessionValidator.js:85:  console.log('✅ Session validation system initialized');
scripts/core/sessionValidator.js:93:  console.log('⚡ Immediate session validation...');
scripts/core/sessionValidator.js:98:    console.log('👤 No user session to validate immediately');
scripts/core/sessionValidator.js:104:    console.log('⚠️ Legacy user without passwordHash detected - forcing re-login immediately');
scripts/core/sessionValidator.js:118:    console.log('✅ Immediate session validation successful');
scripts/core/sessionValidator.js:124:    console.log('⚠️ Network error during immediate validation - allowing login with warning');
scripts/core/sessionValidator.js:136:    console.log('👤 No user session to validate');
scripts/core/sessionValidator.js:142:    console.log('⚠️ Legacy user without passwordHash detected - forcing re-login');
scripts/core/sessionValidator.js:149:    console.log('⏳ Session validation already in progress');
scripts/core/sessionValidator.js:156:    console.log('⚡ Session validated recently, skipping');
scripts/core/sessionValidator.js:160:  console.log('🔍 Validating session for user:', user.tenNhanVien);
scripts/core/sessionValidator.js:161:  console.log('🔑 User has passwordHash:', !!user.passwordHash);
scripts/core/sessionValidator.js:163:    console.log('🔑 PasswordHash preview:', user.passwordHash.substring(0, 8) + '...');
scripts/core/sessionValidator.js:175:      console.log('✅ Session validation successful');
scripts/core/sessionValidator.js:209:  console.log('⚡ Fast session validation request...');
scripts/core/sessionValidator.js:235:        console.log('📋 Server says session is invalid:', result.reason || 'Unknown reason');
scripts/core/sessionValidator.js:241:        console.log('🔄 User data updated from server (fast)');
scripts/core/sessionValidator.js:280:  console.log('📡 Sending session validation request...');
scripts/core/sessionValidator.js:281:  console.log('📋 Request data:', JSON.stringify(data, null, 2));
scripts/core/sessionValidator.js:301:          console.log('📋 Server says session is invalid:', result.reason || 'Unknown reason');
scripts/core/sessionValidator.js:307:          console.log('🔄 User data updated from server');
scripts/core/sessionValidator.js:321:        console.log(`⏳ Retrying in ${VALIDATION_CONFIG.retryDelay}ms...`);
scripts/core/sessionValidator.js:343:  console.log('✅ User data updated from server');
scripts/core/sessionValidator.js:350:  console.log('🚪 Handling invalid session...');
scripts/core/sessionValidator.js:378:  console.log('🔄 Forcing session validation...');
scripts/core/sessionValidator.js:402:  console.log('🔍 Validating session before operation...');
scripts/core/sessionValidator.js:406:    console.log('❌ No user session for operation');
scripts/core/sessionValidator.js:413:    console.log('✅ Using cached validation result:', lastOperationResult);
scripts/core/sessionValidator.js:430:    console.log('✅ Session valid for operation');
scripts/core/sessionValidator.js:444:    console.log(`🔐 Session check for ${functionName}`);
scripts/core/stateManager.js:77:  console.log('🔄 Initializing state manager...');
scripts/core/stateManager.js:92:    console.log('✅ State manager initialized');
scripts/core/stateManager.js:247:    console.log('💾 State persisted to localStorage');
scripts/core/stateManager.js:264:      console.log('💾 Critical state saved as fallback');
scripts/core/stateManager.js:293:        console.log('✅ State loaded from localStorage');
scripts/core/stateManager.js:295:        console.log('⚠️ Saved state is too old, using default state');
scripts/core/stateManager.js:306:      console.log('✅ Critical state loaded as fallback');
scripts/core/stateManager.js:326:  console.log('⏰ Auto-save setup complete');
scripts/core/stateManager.js:350:  console.log('✅ State validation complete');
scripts/core/stateManager.js:365:    console.log('🗑️ Persisted state cleared');
scripts/core/stateManager.js:401:  console.log('🔄 State reset to defaults');
scripts/core/stateManager.js:425:  console.log('🧹 Cleaning up state manager...');
scripts/core/stateManager.js:438:  console.log('✅ State manager cleanup complete');
scripts/core/tabPermissions.js:34:  console.log('📝 Raw tabNhinThay input:', JSON.stringify(tabNhinThay));
scripts/core/tabPermissions.js:38:  console.log('🔍 Parsed permissions array:', permissions);
scripts/core/tabPermissions.js:42:    console.log('✅ Found "tất cả" permission - granting all tabs');
scripts/core/tabPermissions.js:50:    console.log(`🔎 Checking permission: "${permission}" (length: ${permission.length})`);
scripts/core/tabPermissions.js:52:      console.log(`✅ Found mapping for: "${permission}" -> ${TAB_MAPPING[permission]}`);
scripts/core/tabPermissions.js:56:      console.log('📊 Available mappings:', Object.keys(TAB_MAPPING));
scripts/core/tabPermissions.js:61:  console.log('✅ Final parsed tab permissions:', result);
scripts/core/tabPermissions.js:89:  console.log(`🔐 Tab access check: ${tabId} = ${canAccess ? '✅ ALLOWED' : '❌ DENIED'}`);
scripts/core/tabPermissions.js:90:  console.log(`📊 Allowed tabs:`, allowedTabs);
scripts/core/tabPermissions.js:94:    console.log('⚠️ No tabs allowed, fallback to allowing giao-dich');
scripts/core/tabPermissions.js:109:  console.log(`🎯 Default allowed tab: ${defaultTab}`);
scripts/core/tabPermissions.js:123:  console.log('🔍 Filtered allowed tabs:', filtered.map(t => t.id));
scripts/core/tabPermissions.js:131:  console.log('🔒 Hiding unauthorized tabs...');
scripts/core/tabPermissions.js:142:      console.log(`✅ Tab visible: ${tabId}`);
scripts/core/tabPermissions.js:146:      console.log(`❌ Tab hidden: ${tabId}`);
scripts/core/tabPermissions.js:150:  console.log('✅ Tab visibility updated');
scripts/core/tabPermissions.js:159:  console.log(`🔍 Validating access to tab: ${requestedTab}`);
scripts/core/tabPermissions.js:163:    console.log(`📍 No tab requested, using default: ${defaultTab}`);
scripts/core/tabPermissions.js:168:    console.log(`✅ Access granted to tab: ${requestedTab}`);
scripts/core/tabPermissions.js:172:    console.log(`❌ Access denied to tab: ${requestedTab}, redirecting to: ${defaultTab}`);
scripts/core/tabPermissions.js:217:  console.log('🔐 Initializing tab permissions system...');
scripts/core/tabPermissions.js:225:  console.log(`👤 User: ${user.tenNhanVien} | Permissions: ${user.tabNhinThay}`);
scripts/core/tabPermissions.js:230:  console.log('✅ Tab permissions system initialized');
scripts/core/ultraFastInit.js:19:  console.log('⚡ Loading critical functions...');
scripts/core/ultraFastInit.js:32:    console.log('✅ Critical modal functions loaded');
scripts/core/ultraFastInit.js:41:    console.log('✅ Critical utility functions loaded');
scripts/core/ultraFastInit.js:53:  console.log('🚀 ULTRA-FAST INIT: Starting...');
scripts/core/ultraFastInit.js:68:    console.log('⚡ Loading first 15 transactions only...');
scripts/core/ultraFastInit.js:86:      console.log(`⚡ Ultra-fast load complete: ${result.data.length} transactions in ${Date.now() - startTime}ms`);
scripts/core/ultraFastInit.js:109:      console.log('🔄 Background: Loading software list...');
scripts/core/ultraFastInit.js:115:      console.log('✅ Background: Software list loaded');
scripts/core/ultraFastInit.js:124:      console.log('🔄 Background: Loading expense data...');
scripts/core/ultraFastInit.js:144:          console.log(`✅ Background: Loaded ${window.expenseList.length} expenses`);
scripts/core/ultraFastInit.js:151:      console.log('✅ Background: Expense features loaded');
scripts/core/ultraFastInit.js:160:      console.log('🔄 Background: Preloading next transactions...');
scripts/core/ultraFastInit.js:175:      console.log('✅ Background: Next page preloaded');
scripts/debug-employee-report.js:7:    console.log('🔍 Debugging Employee Report...');
scripts/debug-employee-report.js:9:    console.log('Available functions:', {
scripts/debug-employee-report.js:15:    console.log('Container check:', {
scripts/debug-employee-report.js:20:    console.log('Menu items:', {
scripts/debug-employee-report.js:25:    console.log('Global data:', {
scripts/debug-employee-report.js:33:    console.log('🧪 Testing manual employee report load...');
scripts/debug-employee-report.js:42:    console.log('🧪 Testing employee report template load...');
scripts/debug-employee-report.js:51:        console.log('✅ Template loaded successfully, length:', html.length);
scripts/debug-employee-report.js:52:        console.log('Template preview:', html.substring(0, 200) + '...');
scripts/debug-employee-report.js:62:    console.log('🔧 Force loading employee report...');
scripts/debug-employee-report.js:72:        console.log('✅ Employee page shown');
scripts/debug-employee-report.js:78:                console.log('✅ Template injected directly');
scripts/debug-employee-report.js:93:        console.log('✅ Employee menu item activated');
scripts/debug-employee-report.js:97:console.log('🔧 Employee report debug functions loaded:');
scripts/debug-employee-report.js:98:console.log('- debugEmployeeReport()');
scripts/debug-employee-report.js:99:console.log('- testEmployeeReportTemplate()');
scripts/debug-employee-report.js:100:console.log('- forceEmployeeReport()');
scripts/debugAuth.js:6:  console.log('🔍 === AUTH DEBUG START ===');
scripts/debugAuth.js:10:  console.log('📄 localStorage authData:', authData ? 'Found' : 'Not found');
scripts/debugAuth.js:14:      console.log('📄 Auth data:', {
scripts/debugAuth.js:21:      console.log('📄 Invalid JSON in authData');
scripts/debugAuth.js:28:    console.log('📄 State:', {
scripts/debugAuth.js:34:  console.log('🔍 === AUTH DEBUG END ===');
scripts/debugAuth.js:38:  console.log('🚪 Force logout...');
scripts/debugEmployeeBadge.js:6:  console.log('🔍 === EMPLOYEE BADGE DEBUG START ===');
scripts/debugEmployeeBadge.js:11:    console.log('📄 First transaction data:', {
scripts/debugEmployeeBadge.js:33:    console.log('📄 Possible employee fields:', employeeFields);
scripts/debugEmployeeBadge.js:37:    console.log('📄 Sample transaction employee data:');
scripts/debugEmployeeBadge.js:39:      console.log(`  Transaction ${i + 1}:`, {
scripts/debugEmployeeBadge.js:50:    console.log('❌ No transaction data found');
scripts/debugEmployeeBadge.js:55:  console.log('📄 Found info cells:', infoCells.length);
scripts/debugEmployeeBadge.js:59:  console.log('📄 Found table rows:', tableRows.length);
scripts/debugEmployeeBadge.js:63:  console.log('📄 Table body exists:', !!tableBody);
scripts/debugEmployeeBadge.js:65:    console.log('📄 Table body HTML preview:', tableBody.innerHTML.substring(0, 500));
scripts/debugEmployeeBadge.js:69:  console.log('📄 Found employee badges:', employeeBadges.length);
scripts/debugEmployeeBadge.js:73:      console.log(`  Badge ${i + 1}:`, {
scripts/debugEmployeeBadge.js:88:  console.log('📄 Employee badge CSS loaded:', !!cssLink);
scripts/debugEmployeeBadge.js:90:  console.log('🔍 === EMPLOYEE BADGE DEBUG END ===');
scripts/debugEmployeeBadge.js:95:  console.log('🔍 === EMPLOYEE BADGE DEBUG AFTER RENDER ===');
scripts/debugEmployeeBadge.js:105:  console.log('🔄 Forcing table update and debug...');
scripts/debugEmployeeBadge.js:109:    console.log('🔄 Triggering loadTransactions to refresh table...');
scripts/debugEmployeeBadge.js:119:      console.log('✅ Load transactions completed');
scripts/debugEmployeeBadge.js:124:      console.log('❌ Load transactions failed:', err);
scripts/debugEmployeeBadge.js:134:  console.log('🔄 Using fallback table update...');
scripts/debugEmployeeBadge.js:141:    console.log('🔄 Updating table with current data...');
scripts/debugEmployeeBadge.js:146:      console.log('🔄 Using update function:', updateFn.name);
scripts/debugEmployeeBadge.js:157:      console.log('❌ No update function found');
scripts/debugEmployeeBadge.js:165:    console.log('❌ Cannot force table update - missing dependencies');
scripts/debugEmployeeBadge.js:172:  console.log('🎨 === EMPLOYEE COLOR TEST ===');
scripts/debugEmployeeBadge.js:207:    console.log(`🎨 ${code}: ${color.name} (${color.bg}) - Index: ${color.index}`);
scripts/debugEmployeeBadge.js:210:  console.log('🎨 === COLOR TEST END ===');
scripts/debugEmployeeBadge.js:215:  console.log('🔄 Reloading page to see new layout...');
scripts/debugEmployeeBadge.js:221:  console.log('🔍 === UPDATE FUNCTION CHECK ===');
scripts/debugEmployeeBadge.js:222:  console.log('🔍 window.updateTable exists:', typeof window.updateTable);
scripts/debugEmployeeBadge.js:223:  console.log('🔍 window.updateTableUltraFast exists:', typeof window.updateTableUltraFast);
scripts/debugEmployeeBadge.js:224:  console.log('🔍 window.loadTransactions exists:', typeof window.loadTransactions);
scripts/debugEmployeeBadge.js:225:  console.log('🔍 window.userInfo exists:', !!window.userInfo);
scripts/debugEmployeeBadge.js:226:  console.log('🔍 window.formatDate exists:', typeof window.formatDate);
scripts/debugEmployeeBadge.js:229:  console.log('🔍 Checking imports in main.js...');
scripts/debugEmployeeBadge.js:231:  console.log('🔍 Main.js scripts found:', scripts.length);
scripts/debugEmployeeBadge.js:233:  console.log('🔍 === END CHECK ===');
scripts/debugEmployeeBadge.js:238:  console.log('✂️ === CONTACT TRUNCATION TEST ===');
scripts/debugEmployeeBadge.js:251:    console.log(`✂️ "${contact}" → "${truncated}" (${contact.length} → ${truncated.length} chars)`);
scripts/debugEmployeeBadge.js:254:  console.log('✂️ === TRUNCATION TEST END ===');
scripts/debugLayout.js:3:    console.log('🔍 === LAYOUT DEBUG START ===');
scripts/debugLayout.js:6:    console.log('📐 Viewport:', {
scripts/debugLayout.js:18:        console.log('📦 Container:', {
scripts/debugLayout.js:39:        console.log('❌ Container element not found');
scripts/debugLayout.js:47:    console.log('🏢 Body:', {
scripts/debugLayout.js:70:    console.log('🌐 HTML:', {
scripts/debugLayout.js:90:        console.log('🔗 Parent elements chain:');
scripts/debugLayout.js:98:            console.log(`   Level ${level} - ${current.tagName}${current.className ? '.' + current.className : ''}:`, {
scripts/debugLayout.js:117:    console.log('🔍 === LAYOUT DEBUG END ===');
scripts/debugLayout.js:130:    console.log('📏 Window resized');
scripts/debugTable.js:5:  console.log("🔍 === TABLE DEBUG START ===");
scripts/debugTable.js:14:  console.log("📊 Table found:", {
scripts/debugTable.js:31:  console.log("📊 Tbody found:", {
scripts/debugTable.js:42:    console.log(`📦 Parent Level ${level}:`, {
scripts/debugTable.js:58:    console.log("📜 Table wrapper found:", {
scripts/debugTable.js:66:  console.log("🔍 === TABLE DEBUG END ===");
scripts/deleteTransaction.js:20:  console.log("🗑️ deleteTransaction được gọi với:", {
scripts/deleteTransaction.js:54:  console.log("✅ Transaction found:", transaction.transactionId);
scripts/deleteTransaction.js:68:    console.log("Người dùng hủy xóa giao dịch");
scripts/deleteTransaction.js:103:  console.log("📤 Dữ liệu gửi đi:", JSON.stringify(data, null, 2));
scripts/deleteTransaction.js:115:    console.log("Kết quả từ server:", result);
scripts/deploy-helper.js:45:console.log(`✅ Version updated to ${newVersion}`);
scripts/deploy-helper.js:46:console.log(`📅 Last update: ${versionData.lastUpdate}`);
scripts/deploy-helper.js:47:console.log(`🚀 Ready to deploy!`);
scripts/editTransaction.js:52:console.log("📥 editTransaction - gọi fetchSoftwareList với:", {
scripts/editTransaction.js:57:console.log("🔎 typeof fetchSoftwareList =", typeof fetchSoftwareList);
scripts/enableUltraFast.js:9:console.log('⚡ ULTRA-FAST MODE ENABLED');
scripts/enableUltraFast.js:10:console.log('🔄 Please reload the page to see the performance improvement');
scripts/enableUltraFast.js:11:console.log('📝 To disable: localStorage.removeItem("preferUltraFast")');
scripts/expense-category/categoryExportUtils.js:310:    console.log('Category data copied to clipboard');
scripts/expenseQuickSearch.js:89:      console.log('Search results received:', currentSearchResults);
scripts/expenseQuickSearch.js:91:        console.log(`Result ${index}: "${item.description}"`);
scripts/expenseQuickSearchNew.js:168:    console.log('Selected item:', item);
scripts/financial/core/chartManager.js:417:  console.log('✅ Chart manager initialized');
scripts/financial/export/excelExporter.js:43:    console.log(`✅ Exported financial dashboard to ${filename}`);
scripts/financial/export/excelExporter.js:318:    console.log('✅ Exported data as CSV files');
scripts/financial/export/pdfExporter.js:60:    console.log(`✅ Exported financial dashboard to PDF: ${filename}`);
scripts/financial/export/pdfExporter.js:429:    console.log('✅ Opened print dialog as fallback');
scripts/forceFullWidth.js:3:    console.log('🔧 FORCE FULL-WIDTH LAYOUT');
scripts/forceFullWidth.js:163:        console.log('✅ FORCE FULL-WIDTH RESULT:');
scripts/forceFullWidth.js:164:        console.log('- Container width:', finalRect.width);
scripts/forceFullWidth.js:165:        console.log('- Viewport width:', window.innerWidth);
scripts/forceFullWidth.js:166:        console.log('- Success:', finalRect.width >= window.innerWidth - 5 ? 'YES' : 'NO');
scripts/forceFullWidth.js:167:        console.log('- Left position:', finalRect.left);
scripts/forceFullWidth.js:168:        console.log('- Right position:', finalRect.right);
scripts/forceFullWidth.js:169:        console.log('- Coverage:', (finalRect.width / window.innerWidth * 100).toFixed(1) + '%');
scripts/forceReload.js:7:  console.log('🔄 Force reloading application...');
scripts/forceReload.js:14:        console.log('🗑️ Unregistering service worker...');
scripts/forceReload.js:22:      console.log('🗑️ Clearing caches:', cacheNames);
scripts/forceReload.js:29:    console.log('🗑️ Clearing localStorage...');
scripts/forceReload.js:33:    console.log('🗑️ Clearing sessionStorage...');
scripts/forceReload.js:36:    console.log('✅ All caches cleared. Reloading...');
scripts/forceReload.js:49:console.log('🔄 Force reload function available as window.forceReload()');
scripts/formValidation.js:226:  console.log('✅ Form validation setup complete');
scripts/handleAdd.js:23:  console.log("🔍 handleAdd được gọi");
scripts/handleAdd.js:38:    console.log("Đang trong tiến trình sửa, mở modal lựa chọn thêm/cập nhật...");
scripts/handleAdd.js:62:  console.log("📅 Updated dates to today for new transaction (preserving end date)");
scripts/handleAdd.js:144:  console.log("📤 Dữ liệu gửi đi:", JSON.stringify(data, null, 2));
scripts/handleAddOrUpdateModal.js:69:    console.log("🆕 handleAddNewTransaction called - clearing edit state");
scripts/handleAddOrUpdateModal.js:85:    console.log("🆕 Updating date to today and proceeding with add");
scripts/handleAddOrUpdateModal.js:93:    console.log("🆕 Calling handleAdd() for new transaction with current form data");
scripts/handleAddOrUpdateModal.js:102:    console.log("🔄 handleUpdateTransactionFromModal called");
scripts/handleAddOrUpdateModal.js:108:    console.log("❌ handleCancelModal called");
scripts/handleResetExpense.js:65:    console.log('🔄 Reloading all expenses...');
scripts/handleResetExpense.js:87:      console.log(`✅ Reloaded ${window.expenseList.length} expenses`);
scripts/handleSearchExpense.js:16:    console.log("⚠️ Không phải admin - một số điều kiện tìm kiếm chi phí sẽ bị bỏ qua: ngày chi phí, sản phẩm, gói");
scripts/handleSearchExpense.js:73:    console.log("📋 Không có điều kiện tìm kiếm - sẽ lấy tất cả chi phí");
scripts/handleSearchExpense.js:82:  console.log("📤 Tìm kiếm chi phí với điều kiện:", JSON.stringify(data, null, 2));
scripts/handleUpdate.js:7:  console.log("🔄 handleUpdate được gọi");
scripts/handleUpdate.js:20:  console.log("🔍 Current edit IDs:", { windowId, stateId, currentEditTransactionId });
scripts/handleUpdate.js:36:  console.log("✅ User info:", userInfo.tenNhanVien);
scripts/handleUpdate.js:48:  console.log("✅ Found transaction to update:", transaction.transactionId);
scripts/handleUpdate.js:92:  console.log("✅ Validation passed");
scripts/handleUpdate.js:134:  console.log("📤 Dữ liệu cập nhật gửi đi:", JSON.stringify(data, null, 2));
scripts/handleUpdate.js:144:    console.log("📥 Kết quả từ server:", result);
scripts/handleUpdate.js:164:      console.log("✅ Cập nhật thành công");
scripts/handleUpdateCookie.js:7:  console.log('🍪 handleUpdateCookie called with:', { index, transactionListLength: transactionList?.length });
scripts/handleUpdateCookie.js:10:  console.log('🍪 Found transaction:', transaction);
scripts/handleUpdateCookie.js:18:  console.log('🍪 Modal found:', !!modal);
scripts/handleUpdateCookie.js:31:    console.log('🍪 Request data:', {
scripts/handleUpdateCookie.js:46:    console.log('🍪 Response result:', result);
scripts/handleUpdateCookie.js:73:      console.log('🔐 Account info result:', accountResult);
scripts/handleUpdateCookie.js:106:  console.log('🍪 copyCurrentCookie called');
scripts/handleUpdateCookie.js:109:  console.log('🍪 Current cookie value:', val);
scripts/handleUpdateCookie.js:117:    console.log('✅ Cookie copied successfully');
scripts/handleUpdateCookie.js:127:  console.log('🍪 confirmUpdateCookie called');
scripts/handleUpdateCookie.js:132:    console.log('🍪 Current transaction:', transaction);
scripts/handleUpdateCookie.js:135:    console.log('🍪 New cookie element found:', !!newCookieEl);
scripts/handleUpdateCookie.js:138:    console.log('🍪 New cookie value:', newCookie);
scripts/handleUpdateCookie.js:148:      console.log('❌ Empty cookie');
scripts/handleUpdateCookie.js:150:      console.log('🔔 Showing alert for empty cookie');
scripts/handleUpdateCookie.js:157:      console.log('❌ Cookie too short');
scripts/handleUpdateCookie.js:159:      console.log('🔔 Showing alert for short cookie');
scripts/handleUpdateCookie.js:166:      console.log('❌ Cookie invalid format');
scripts/handleUpdateCookie.js:172:    console.log('✅ All validations passed, proceeding with update');
scripts/handleUpdateCookie.js:193:    console.log('🍪 Update result:', result);
scripts/handleUpdateCookie.js:218:  console.log('🍪 cancelUpdateCookie called');
scripts/handleUpdateCookie.js:223:    console.log('🍪 Cancel transaction:', transaction);
scripts/handleUpdateCookie.js:226:      console.log('❌ No transaction to cancel');
scripts/handleUpdateCookie.js:242:    console.log('✅ Cancel log sent successfully');
scripts/handleUpdateCookie.js:253:  console.log('🍪 closeUpdateCookieModal called');
scripts/handleUpdateCookie.js:257:    console.log('✅ Modal closed');
scripts/handleUpdateCookie.js:266:  console.log('🔒 Disabling interaction');
scripts/handleUpdateCookie.js:276:  console.log('🔓 Enabling interaction'); 
scripts/handleUpdateCookie.js:286:  console.log('👤 copyUsername called');
scripts/handleUpdateCookie.js:289:  console.log('👤 Username value:', val);
scripts/handleUpdateCookie.js:297:    console.log('✅ Username copied successfully');
scripts/handleUpdateCookie.js:306:  console.log('🔑 copyPassword called');
scripts/handleUpdateCookie.js:309:  console.log('🔑 Password value:', val ? '***' : '(empty)');
scripts/handleUpdateCookie.js:317:    console.log('✅ Password copied successfully');
scripts/handleUpdateExpense.js:14:    console.log('🔄 Reloading expense data from server...');
scripts/handleUpdateExpense.js:33:      console.log(`✅ Reloaded ${result.data.length} expenses from server`);
scripts/initExpenseTab.js:49:  console.log('📊 Initializing expense tab...');
scripts/initExpenseTab.js:58:      console.log('🔍 Expense quick search initialized');
scripts/initExpenseTab.js:62:    console.log('🔍 DEBUG: Checking expense list state:', {
scripts/initExpenseTab.js:71:      console.log(`✅ Using cached expense data (${window.expenseList.length} expenses) - no reload needed`);
scripts/initExpenseTab.js:77:      console.log('💰 Loading expense data...');
scripts/initExpenseTab.js:83:    console.log('✅ Expense tab initialized');
scripts/initExpenseTab.js:108:    console.log('🔄 Loading expenses in background...');
scripts/initExpenseTab.js:130:      console.log(`✅ Loaded ${window.expenseList.length} expenses in background`);
scripts/initExpenseTab.js:174:  console.log('🔄 Expense tab state reset');
scripts/initSoftwareTab.js:15:  console.log('💿 Initializing software tab...');
scripts/initSoftwareTab.js:26:  console.log('✅ Software tab initialized');
scripts/initSoftwareTab.js:33:    console.log('🔄 Loading software data...');
scripts/initSoftwareTab.js:47:      console.log(`✅ Loaded ${window.softwareList.length} software items`);
scripts/initSoftwareTab.js:51:        console.log('📋 Sample software data:', window.softwareList[0]);
scripts/initSoftwareTab.js:54:        console.log(`📋 Has orderInfo data: ${hasOrderInfo}`);
scripts/initSoftwareTab.js:55:        console.log(`📋 Has passwordChangeDays data: ${hasPasswordChangeDays}`);
scripts/initSoftwareTab.js:384:      console.log('View software:', software);
scripts/initSoftwareTab.js:387:      console.log('Edit software:', software);
scripts/initSoftwareTab.js:406:  console.log(`📝 Editing software at index ${index}:`, software);
scripts/initSoftwareTab.js:475:    console.log(`✅ Software data loaded into form for editing`);
scripts/initSoftwareTab.js:495:    console.log('✅ Copied to clipboard:', text);
scripts/initSoftwareTab.js:503:  console.log('🔄 Adding new software...');
scripts/initSoftwareTab.js:551:      console.log('✅ Software added successfully:', result.data);
scripts/initSoftwareTab.js:581:  console.log('🔄 Updating software...');
scripts/initSoftwareTab.js:629:    console.log('Software update data:', updateData);
scripts/initSoftwareTab.js:663:      console.log('✅ Software updated successfully:', result.data);
scripts/initSoftwareTab.js:693:  console.log('🔍 Searching software...');
scripts/initSoftwareTab.js:724:    console.log('Software search conditions:', searchConditions);
scripts/initSoftwareTab.js:765:      console.log('✅ Software search completed:', result.data.length, 'results found');
scripts/initSoftwareTab.js:795:  console.log('🔄 Resetting software form...');
scripts/initSoftwareTab.js:817:    console.log('🔄 Cleared search mode and reloaded original data');
scripts/initSoftwareTab.js:820:  console.log('✅ Software form reset complete');
scripts/initSoftwareTab.js:925:  console.log('🔧 Initializing software form dropdowns...');
scripts/initSoftwareTab.js:935:      console.log('🔄 Software name changed:', softwareNameInput.value);
scripts/initSoftwareTab.js:944:      console.log('🔄 Software name confirmed:', softwareNameInput.value);
scripts/initSoftwareTab.js:958:      console.log('🔄 Software package changed:', softwarePackageInput.value);
scripts/initSoftwareTab.js:966:      console.log('🔄 Software package confirmed:', softwarePackageInput.value);
scripts/initSoftwareTab.js:978:      console.log('🔄 Account name changed:', accountNameInput.value);
scripts/initSoftwareTab.js:984:      console.log('🔄 Account name selected:', accountNameInput.value);
scripts/initSoftwareTab.js:998:      console.log('🔄 Order info changed (typing):', orderInfoInput.value);
scripts/initSoftwareTab.js:1003:      console.log('🔄 Order info selected/entered:', orderInfoInput.value);
scripts/initSoftwareTab.js:1010:      console.log('🔄 Order info field lost focus:', orderInfoInput.value);
scripts/initSoftwareTab.js:1022:      console.log('🔄 Standard name changed (typing):', standardNameInput.value);
scripts/initSoftwareTab.js:1027:      console.log('🔄 Standard name selected/entered:', standardNameInput.value);
scripts/initSoftwareTab.js:1034:      console.log('🔄 Standard name field lost focus:', standardNameInput.value);
scripts/initSoftwareTab.js:1042:  console.log('✅ Software form dropdowns initialized');
scripts/initSoftwareTab.js:1055:  console.log('🔍 DEBUG: Software List Data');
scripts/initSoftwareTab.js:1056:  console.log('Total items:', window.softwareList.length);
scripts/initSoftwareTab.js:1057:  console.log('Sample data:', window.softwareList.slice(0, 3));
scripts/initSoftwareTab.js:1061:  console.log('Unique software names:', uniqueNames);
scripts/initSoftwareTab.js:1065:  console.log('Unique order info:', uniqueOrderInfo);
scripts/initSoftwareTab.js:1074:    console.log(`Packages for "${testSoftware}":`, [...new Set(packagesForSoftware)]);
scripts/initSoftwareTab.js:1080:    console.log(`Order info for "${testSoftware}":`, [...new Set(orderInfoForSoftware)]);
scripts/initSoftwareTab.js:1114:  console.log('🔄 Force refreshing all dropdowns...');
scripts/initSoftwareTab.js:1116:  console.log('✅ All dropdowns refreshed');
scripts/initSoftwareTab.js:1125:      console.log('✅ Selected order info:', value);
scripts/initSoftwareTab.js:1153:  console.log(`✅ Updated software name dropdown with ${uniqueNames.length} items`);
scripts/initSoftwareTab.js:1162:  console.log(`🔍 Filtering packages for software: "${selectedSoftwareName}"`);
scripts/initSoftwareTab.js:1172:    console.log(`📊 Found ${filteredItems.length} items matching software name`);
scripts/initSoftwareTab.js:1180:    console.log(`📊 Showing all packages (no filter)`);
scripts/initSoftwareTab.js:1186:  console.log(`📦 Available packages:`, uniquePackages);
scripts/initSoftwareTab.js:1208:    console.log(`✅ Updated software package dropdown with ${uniquePackages.length} items`);
scripts/initSoftwareTab.js:1210:    console.log(`⏭️ Software package dropdown unchanged (${uniquePackages.length} items)`);
scripts/initSoftwareTab.js:1221:  console.log(`🔍 Filtering accounts for software: "${selectedSoftwareName}", package: "${selectedSoftwarePackage}"`);
scripts/initSoftwareTab.js:1234:    console.log(`📊 Found ${filteredItems.length} items matching both criteria`);
scripts/initSoftwareTab.js:1246:    console.log(`📊 Found ${filteredItems.length} items matching software name only`);
scripts/initSoftwareTab.js:1255:    console.log(`📊 Showing all accounts (no filter)`);
scripts/initSoftwareTab.js:1261:  console.log(`🏢 Available accounts for ${filterDescription}:`, uniqueAccounts);
scripts/initSoftwareTab.js:1270:  console.log(`✅ Updated account name dropdown with ${uniqueAccounts.length} items`);
scripts/initSoftwareTab.js:1289:  console.log(`🔍 Filtering order info for software: "${selectedSoftwareName}", package: "${selectedSoftwarePackage}", account: "${selectedAccountName}"`);
scripts/initSoftwareTab.js:1303:    console.log(`📊 Found ${filteredItems.length} items matching all criteria`);
scripts/initSoftwareTab.js:1316:    console.log(`📊 Found ${filteredItems.length} items matching software and package`);
scripts/initSoftwareTab.js:1328:    console.log(`📊 Found ${filteredItems.length} items matching software name only`);
scripts/initSoftwareTab.js:1337:    console.log(`📊 Showing all order info (no filter)`);
scripts/initSoftwareTab.js:1343:  console.log(`📋 Available order info for ${filterDescription}:`, uniqueOrderInfo);
scripts/initSoftwareTab.js:1356:  console.log(`✅ Updated order info dropdown with ${uniqueOrderInfo.length} items`);
scripts/initSoftwareTab.js:1367:  console.log(`🔍 Filtering standard names for software: "${selectedSoftwareName}", package: "${selectedSoftwarePackage}", account: "${selectedAccountName}"`);
scripts/initSoftwareTab.js:1381:    console.log(`📊 Found ${filteredItems.length} items matching all criteria`);
scripts/initSoftwareTab.js:1394:    console.log(`📊 Found ${filteredItems.length} items matching software and package`);
scripts/initSoftwareTab.js:1406:    console.log(`📊 Found ${filteredItems.length} items matching software name only`);
scripts/initSoftwareTab.js:1415:    console.log(`📊 Showing all standard names (no filter)`);
scripts/initSoftwareTab.js:1421:  console.log(`📋 Available standard names for ${filterDescription}:`, uniqueStandardNames);
scripts/initSoftwareTab.js:1430:  console.log(`✅ Updated standard name dropdown with ${uniqueStandardNames.length} items`);
scripts/initSoftwareTab.js:1451:      console.log('🎯 Found exact match with standard name:', exactMatch);
scripts/initSoftwareTab.js:1466:      console.log('🔄 Found partial match (without standard name):', partialMatch);
scripts/initSoftwareTab.js:1472:  console.log('ℹ️ No matching software found for auto-fill');
scripts/initSoftwareTab.js:1476:  console.log('🔄 Auto-filling form from selection:', matchingSoftware);
scripts/initSoftwareTab.js:1532:      console.log(`📝 Set edit index to: ${editIndex}`);
scripts/initSoftwareTab.js:1535:    console.log('✅ Form auto-filled successfully');
scripts/initSoftwareTab.js:1544:  console.log('🔄 Updating software...');
scripts/initSoftwareTab.js:1647:      console.log('✅ Software updated successfully:', result.data);
scripts/initSoftwareTab.js:1682:  console.log('🔍 Searching software...');
scripts/initSoftwareTab.js:1743:      console.log('✅ Software search completed:', result.data.length, 'results');
scripts/initSoftwareTab.js:1798:  console.log('🔍 Search conditions:', conditions);
scripts/initSoftwareTab.js:1804:  console.log('🔄 Clearing software search...');
scripts/initSoftwareTab.js:1816:  console.log('✅ Software search cleared');
scripts/initSoftwareTab.js:1933:  console.log(`🎯 Software action: ${action} for index ${index}`);
scripts/initSoftwareTab.js:2027:  console.log('👁️ Viewing software:', software.softwareName);
scripts/initSoftwareTab.js:2070:  console.log('🔗 Opening Google Sheet for:', software.softwareName, 'ID:', software.accountSheetId);
scripts/initStatisticsTab.js:15:  console.log('📊 Initializing statistics tab...');
scripts/initStatisticsTab.js:19:    console.log('🔍 Checking data availability:', {
scripts/initStatisticsTab.js:37:      console.log('✅ Report menu initialized');
scripts/initStatisticsTab.js:44:    console.log('✅ Statistics tab initialized successfully');
scripts/initStatisticsTab.js:64:    console.log('📄 Report pages already loaded');
scripts/initStatisticsTab.js:75:    console.log('📄 Report pages HTML loaded');
scripts/initStatisticsTab.js:119:  console.log('🎛️ Initializing menu interactions');
scripts/initStatisticsTab.js:138:  console.log('✅ Menu interactions initialized');
scripts/initStatisticsTab.js:146:  console.log('📊 Loading report type:', reportType);
scripts/initTransactionTab.js:26:      console.log('🔄 Software name changed:', this.value);
scripts/initTransactionTab.js:36:    console.log('✅ Software name change handler attached');
scripts/initTransactionTab.js:47:      console.log('🔄 Software package changed:', this.value);
scripts/initTransactionTab.js:57:    console.log('✅ Software package change handler attached');
scripts/initTransactionTab.js:66:    console.log('📦 Loading software data...');
scripts/initTransactionTab.js:73:      console.log('✅ Software data loaded');
scripts/initTransactionTab.js:84:  console.log('💰 Initializing transaction tab...');
scripts/initTransactionTab.js:99:    console.log('✅ Transaction tab initialized successfully');
scripts/loadTransactions.js:20:    console.log('📦 Using cached transaction data for page', page);
scripts/loadTransactions.js:31:  console.log(`🔄 Loading transactions (page ${page}, limit ${limit})...`);
scripts/loadTransactions.js:118:        console.log(`🔄 Updating table with ${transactions.length} transactions (page ${page})`);
scripts/loadTransactions.js:122:      console.log(`✅ Load transactions successful: ${transactions.length} transactions (page ${page})`);
scripts/loadTransactions.js:150:  console.log("🔄 Bắt đầu load transactions...");
scripts/loadTransactions.js:202:      console.log("🔍 Tab check:", {
scripts/loadTransactions.js:211:        console.log("🔄 Updating transaction table with", window.transactionList.length, "transactions");
scripts/loadTransactions.js:214:        console.log("ℹ️ No transaction data to update");
scripts/loadTransactions.js:217:      console.log("✅ Load transactions thành công:", window.transactionList.length, "giao dịch");
scripts/login.js:9:  console.log("Bắt đầu đăng nhập...");
scripts/main.js:297:    console.log('🔍 Debugging Employee Report...');
scripts/main.js:321:    console.log('Debug results:', results);
scripts/main.js:324:    console.log('🧪 Testing manual employee report load...');
scripts/main.js:335:    console.log('🔧 Force loading employee report...');
scripts/main.js:340:    console.log('Hidden report pages:', reportPages.length);
scripts/main.js:346:        console.log('✅ Employee page shown');
scripts/main.js:353:                console.log('✅ Template injected directly');
scripts/main.js:370:        console.log('✅ Employee menu item activated');
scripts/main.js:376:    console.log('🔍 Debugging Financial Management...');
scripts/main.js:405:        console.log('✅ Testing loadFinancialManagement...');
scripts/main.js:415:    console.log('🔧 Force loading financial management...');
scripts/main.js:420:    console.log('Hidden report pages:', reportPages.length);
scripts/main.js:426:        console.log('✅ Finance page shown');
scripts/main.js:431:            console.log('✅ Financial management forced');
scripts/main.js:447:        console.log('✅ Finance menu item activated');
scripts/main.js:453:    console.log('🔍 Debugging Cash Flow vs Accrual...');
scripts/main.js:482:        console.log('✅ Testing loadCashFlowAccrualReport...');
scripts/main.js:492:    console.log('🔧 Force loading cash flow vs accrual...');
scripts/main.js:497:    console.log('Hidden report pages:', reportPages.length);
scripts/main.js:503:        console.log('✅ Cash flow accrual page shown');
scripts/main.js:508:            console.log('✅ Cash flow accrual forced');
scripts/main.js:524:        console.log('✅ Cash flow accrual menu item activated');
scripts/modalUnified.js:7:  console.log('🔄 showProcessingModal called:', message);
scripts/modalUnified.js:24:    console.log('✅ Old processing modal shown');
scripts/modalUnified.js:52:    console.log('✅ Modern processing modal created');
scripts/modalUnified.js:61:  console.log('✅ Modern processing modal shown');
scripts/modalUnified.js:70:  console.log('❌ closeProcessingModal called');
scripts/modalUnified.js:76:    console.log('✅ Old processing modal closed');
scripts/modalUnified.js:83:    console.log('✅ Modern processing modal closed');
scripts/modalUnified.js:93:  console.log('📢 showResultModal called:', message, 'success:', isSuccess);
scripts/modalUnified.js:142:      console.log('✅ Result modal closed');
scripts/modalUnified.js:152:    console.log('✅ Result modal created');
scripts/modalUnified.js:182:  console.log('✅ Result modal shown');
scripts/partialLoader.js:16:      console.log(`📦 Used cached partial: ${partialPath}`);
scripts/partialLoader.js:21:  console.log(`📄 Loading partial: ${partialPath} into #${elementId}`);
scripts/partialLoader.js:39:      console.log(`✅ Inserted into #${elementId}`);
scripts/partialLoader.js:67:  console.log('🚀 PartialLoader: Starting optimized partial loading...');
scripts/partialLoader.js:71:    console.log('🚀 Preloading all partials in parallel...');
scripts/partialLoader.js:112:      console.log(`✅ All partials preloaded in ${Date.now() - preloadStart}ms`);
scripts/partialLoader.js:116:    console.log('🚀 Phase 1: Injecting critical components...');
scripts/partialLoader.js:119:    console.log('✅ Critical components injected');
scripts/partialLoader.js:122:    console.log('🚀 Phase 2: Injecting remaining components from cache...');
scripts/partialLoader.js:140:    console.log('✅ Non-critical component injection scheduled');
scripts/partialLoader.js:143:    console.log('🚀 Phase 4: Loading optional components...');
scripts/partialLoader.js:148:        console.log('✅ Report pages loaded');
scripts/partialLoader.js:152:    console.log('✅ All partials loading initiated');
scripts/periodSelector.js:40:  console.log('📅 Selecting report period:', period);
scripts/periodSelector.js:243:  console.log('🔄 Refreshing all reports with date range:', dateRange);
scripts/periodSelector.js:294:  console.log('📅 Initializing period selector');
scripts/renderExpenseStats.js:21:    console.log("⏭️ Không ở tab chi phí/thống kê, bỏ qua render");
scripts/renderExpenseStats.js:27:    console.log("⏭️ Statistics UI Controller đang xử lý, bỏ qua renderExpenseStats");
scripts/renderExpenseStats.js:37:  console.log("🔄 Bắt đầu load expense data bằng module mới...");
scripts/renderExpenseStats.js:46:    console.log("✅ Load expense data thành công:", expenseData.length, "chi phí");
scripts/renderExpenseStats.js:51:    console.log("🔄 Thử phương pháp cũ...");
scripts/renderExpenseStats.js:83:      console.log("✅ Legacy load expense data thành công:", result.data.length, "chi phí");
scripts/renderExpenseStats.js:97:  console.log("🔍 DEBUG: Dữ liệu chi phí nhận được:", data);
scripts/renderExpenseStats.js:108:  console.log("📌 BẮT ĐẦU TÍNH TỔNG CHI PHÍ VỚI MODULE MỚI");
scripts/renderExpenseStats.js:109:  console.log("🟢 Vai trò:", window.userInfo?.vaiTro);
scripts/renderExpenseStats.js:110:  console.log("🟢 isExpenseSearching:", window.isExpenseSearching);
scripts/renderExpenseStats.js:111:  console.log("🟢 todayFormatted:", todayFormatted);
scripts/renderExpenseStats.js:112:  console.log("🟢 Số lượng bản ghi chi phí:", data?.length);
scripts/renderExpenseStats.js:122:  console.log("✅ Tổng chi phí tính được:", totalExpense);
scripts/renderExpenseStats.js:128:  console.log("✅ Đã lưu totalExpense:", totalExpense, "- Không hiển thị totals");
scripts/renderExpenseStats.js:148:      console.log("⏭️ Not on statistics tab, skipping modular summary");
scripts/renderExpenseStats.js:163:    console.log("✅ Statistics summary rendered with new modules");
scripts/renderExpenseStats.js:400:      console.log("🎮 Initializing statistics UI controller...");
scripts/reports/cashflow-accrual/cashFlowAccrualCharts.js:579:        console.log('All cash flow vs accrual charts destroyed');
scripts/reports/cashflow-accrual/cashFlowAccrualCore.js:28:            console.log('🔄 Loading cash flow vs accrual data...');
scripts/reports/cashflow-accrual/cashFlowAccrualCore.js:34:            console.log('📊 Data loaded:', {
scripts/reports/cashflow-accrual/cashFlowAccrualCore.js:42:            console.log('✅ Cash flow vs accrual data processing completed');
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:27:            console.log('🔄 Initializing Cash Flow vs Accrual comparison...');
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:37:            console.log('✅ Cash Flow vs Accrual comparison initialized successfully');
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:53:            console.log('Cash flow vs accrual data loaded successfully');
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:121:            console.log('Rendering cash flow vs accrual dashboard...');
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:130:            console.log('✅ Cash flow vs accrual dashboard rendered');
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:603:            console.log('✅', message);
scripts/reports/cashflow-accrual/cashFlowAccrualLoader.js:626:        console.log('Cash Flow vs Accrual comparison destroyed');
scripts/reports/cashflow-accrual/cashFlowAccrualReport.js:15:        console.log('⚖️ Loading Cash Flow vs Accrual Report...');
scripts/reports/cashflow-accrual/cashFlowAccrualReport.js:31:        console.log('✅ Cash Flow vs Accrual Report loaded successfully');
scripts/reports/cashflow-accrual/cashFlowAccrualReport.js:58:        console.log('📄 Cash flow vs accrual template loaded from file');
scripts/reports/cashflow-accrual/cashFlowAccrualReport.js:61:        console.log('📄 Using fallback cash flow vs accrual template');
scripts/reports/cashflow-accrual/cashFlowAccrualReport.js:329:        console.log('⚖️ Initializing Cash Flow vs Accrual Report...');
scripts/reports/cashflow-accrual/cashFlowAccrualReport.js:344:    console.log('🧹 Cash Flow vs Accrual Report cleaned up');
scripts/reports/core/reportHelpers.js:15:    console.log(`⏳ Waiting for data to load... (attempt ${attempts + 1}/${maxAttempts})`);
scripts/reports/core/reportHelpers.js:22:    console.log('🔄 No transaction data found, triggering load...');
scripts/reports/core/reportHelpers.js:34:    console.log('🔄 No expense data found, loading from API...');
scripts/reports/core/reportHelpers.js:48:        console.log('🔄 Fetching expense data from API...');
scripts/reports/core/reportHelpers.js:67:          console.log(`✅ Loaded ${window.expenseList.length} expenses from API`);
scripts/reports/core/reportHelpers.js:86:  console.log('✅ Data ensured:', {
scripts/reports/core/reportHelpers.js:97:    console.log('📦 Loading software list...');
scripts/reports/core/reportHelpers.js:108:        console.log(`✅ Loaded ${window.softwareList.length} software items`);
scripts/reports/core/reportHelpers.js:165:  console.log(`🔄 Refreshing current report: ${currentReport}`);
scripts/reports/core/reportHelpers.js:177:  console.log(`📊 Exporting current report: ${currentReport}`);
scripts/reports/customer/customerManagement.js:37:  console.log('👥 Loading customer management with options:', options);
scripts/reports/customer/customerManagement.js:50:    console.log('👥 Customer management data:', {
scripts/reports/customer/customerManagement.js:79:    console.log('✅ Customer management loaded successfully');
scripts/reports/customer/customerManagement.js:104:    console.log('✅ Customer management template loaded');
scripts/reports/customer/customerManagement.js:210:  console.log('👥 Updating customer KPIs');
scripts/reports/customer/customerManagement.js:229:  console.log('👥 Customer KPIs updated:', customerData);
scripts/reports/customer/customerManagement.js:236:  console.log('📈 Rendering customer acquisition chart');
scripts/reports/customer/customerManagement.js:324:  console.log('🔄 Rendering customer lifecycle chart');
scripts/reports/customer/customerManagement.js:397:  console.log('🎯 Updating customer segmentation');
scripts/reports/customer/customerManagement.js:425:  console.log('📋 Loading active customers table');
scripts/reports/customer/customerManagement.js:514:  console.log('💡 Loading customer insights');
scripts/reports/customer/customerManagement.js:562:  console.log('🛠️ Updating CRM tools');
scripts/reports/customer/customerManagement.js:927:  console.log('📊 Exporting customer report...');
scripts/reports/customer/customerManagement.js:931:  console.log('➕ Opening add customer modal...');
scripts/reports/customer/customerManagement.js:935:  console.log('📊 Exporting customer data...');
scripts/reports/customer/customerManagement.js:939:  console.log(`🔄 Toggling lifecycle chart to ${viewType} view`);
scripts/reports/customer/customerManagement.js:945:  console.log(`🔍 Filtering customers by: ${searchTerm}`);
scripts/reports/customer/customerManagement.js:951:  console.log(`🔍 Filtering customers by status: ${status}`);
scripts/reports/customer/customerManagement.js:961:  console.log(`👁️ Viewing customer details: ${customerId}`);
scripts/reports/customer/customerManagement.js:965:  console.log(`✏️ Editing customer: ${customerId}`);
scripts/reports/customer/customerManagement.js:969:  console.log(`💬 Messaging customer: ${customerId}`);
scripts/reports/customer/customerManagement.js:973:  console.log(`🎯 Executing action ${action} for customer: ${customerId}`);
scripts/reports/customer/customerManagement.js:1001:  console.log('📧 Sending bulk email...');
scripts/reports/customer/customerManagement.js:1005:  console.log('📱 Sending bulk SMS...');
scripts/reports/customer/customerManagement.js:1009:  console.log('📰 Creating newsletter...');
scripts/reports/customer/customerManagement.js:1013:  console.log('🎫 Viewing pending tickets...');
scripts/reports/customer/customerManagement.js:1017:  console.log('🆕 Creating new ticket...');
scripts/reports/customer/customerManagement.js:1021:  console.log('🎁 Managing loyalty program...');
scripts/reports/customer/customerManagement.js:1025:  console.log('🏆 Distributing rewards...');
scripts/reports/customer/customerManagement.js:1029:  console.log('📄 Generating customer report...');
scripts/reports/customer/customerManagement.js:1033:  console.log('📅 Scheduling report...');
scripts/reports/customer/customerManagement.js:1037:  console.log(`🔄 Refreshing acquisition chart for view: ${view}`);
scripts/reports/customer/customerManagement.js:1041:  console.log(`🔄 Refreshing segmentation for: ${customerState.currentSegment}`);
scripts/reports/customer/customerManagement.js:1045:  console.log(`🔄 Refreshing insights for: ${customerState.currentInsight}`);
scripts/reports/customer/customerReport.js:15:  console.log('👥 Loading customer report');
scripts/reports/customer/customerReport.js:27:    console.log('✅ Customer report loaded');
scripts/reports/employee/employeeCharts.js:476:        console.log(`Updating charts for period: ${period}`);
scripts/reports/employee/employeeDataProcessor.js:18:        console.log('📊 Processing employee data...', { transactions: transactions.length, expenses: expenses.length });
scripts/reports/employee/employeeDataProcessor.js:44:        console.log('✅ Employee data processed:', result);
scripts/reports/employee/employeeExport.js:15:        console.log('📊 Exporting employee data to Excel...');
scripts/reports/employee/employeeExport.js:24:            console.log('✅ Excel export completed');
scripts/reports/employee/employeeExport.js:37:        console.log('📄 Exporting employee data to CSV...');
scripts/reports/employee/employeeExport.js:43:            console.log('✅ CSV export completed');
scripts/reports/employee/employeeExport.js:56:        console.log('📑 Exporting employee data to PDF...');
scripts/reports/employee/employeeExport.js:60:            console.log('PDF export not yet implemented');
scripts/reports/employee/employeeExport.js:283:        console.log(`📊 Exporting individual report for ${employee.name}...`);
scripts/reports/employee/employeeReport.js:16:        console.log('🧑‍💼 Loading Employee Report...');
scripts/reports/employee/employeeReport.js:35:        console.log('✅ Employee Report loaded successfully');
scripts/reports/employee/employeeReport.js:65:        console.log('📄 Employee report template loaded');
scripts/reports/employee/employeeReportCore.js:39:            console.log('🔧 Initializing Employee Report with actual sheet data...');
scripts/reports/employee/employeeReportCore.js:53:            console.log('✅ Employee Report initialized successfully');
scripts/reports/employee/employeeReportCore.js:67:            console.log('📊 Employee data loaded:', {
scripts/reports/employee/employeeReportCore.js:205:        console.log('🔄 Processing all employee data...');
scripts/reports/employee/employeeReportCore.js:214:        console.log('✅ All employee data processed:', this.processedData);
scripts/reports/employee/employeeReportCore.js:220:        console.log('🔄 Processing employee data...');
scripts/reports/employee/employeeReportCore.js:303:        console.log('✅ Employee data processing completed:', this.employees.length, 'employees');
scripts/reports/employee/employeeReportCore.js:308:        console.log('🎭 Generating mock employee data for demonstration...');
scripts/reports/employee/employeeReportCore.js:1443:                console.log('Performance review tool');
scripts/reports/employee/employeeReportCore.js:1446:                console.log('Commission calculator');
scripts/reports/employee/employeeReportCore.js:1452:                console.log('Training plan tool');
scripts/reports/employee/employeeReportCore.js:1455:                console.log('Team analytics tool');
scripts/reports/employee/employeeReportCore.js:1458:                console.log('Incentive program tool');
scripts/reports/employee/employeeReportCore.js:1464:        console.log('Review goals functionality');
scripts/reports/employee/employeeReportCore.js:1546:        console.log('🔄 Refreshing employee report data...');
scripts/reports/employee/employeeReportLoader.js:25:            console.log('[Employee Report] Initializing...');
scripts/reports/employee/employeeReportLoader.js:40:            console.log('[Employee Report] Initialized successfully');
scripts/reports/employee/employeeReportLoader.js:53:            console.log('[Employee Report] Loading data...');
scripts/reports/employee/employeeReportLoader.js:59:                console.log('[Employee Report] Using transactionList/expenseList data');
scripts/reports/employee/employeeReportLoader.js:66:                console.log('[Employee Report] Using currentTransactionData/currentExpenseData');
scripts/reports/employee/employeeReportLoader.js:71:            console.log('[Employee Report] No cached data available, using mock data');
scripts/reports/employee/employeeReportLoader.js:188:            console.log('[Employee Report] Render completed');
scripts/reports/employee/employeeReportLoader.js:524:        console.log('[Employee Report] Search:', query);
scripts/reports/employee/employeeReportLoader.js:532:        console.log('[Employee Report] Filter:', filterValue);
scripts/reports/employee/employeeReportLoader.js:559:        console.log('[Employee Report] Chart period changed:', period);
scripts/reports/employee/employeeReportLoader.js:566:        console.log('[Employee Report] Quick action:', action);
scripts/reports/employee/employeeReportLoader.js:586:            console.log('[Employee Report] Refreshing...');
scripts/reports/employee/employeeReportLoader.js:589:            console.log('[Employee Report] Refresh completed');
scripts/reports/employee/employeeReportLoader.js:600:        console.log('[Employee Report] Exporting data...');
scripts/reports/employee/employeeReportLoader.js:616:        console.log('[Employee Report] Showing settings...');
scripts/reports/expense/expenseAnalysis.js:28:  console.log('💸 Loading expense analysis with options:', options);
scripts/reports/expense/expenseAnalysis.js:41:    console.log('💸 Expense analysis data:', {
scripts/reports/expense/expenseAnalysis.js:68:    console.log('✅ Expense analysis loaded successfully');
scripts/reports/expense/expenseAnalysis.js:93:    console.log('✅ Expense analysis template loaded');
scripts/reports/expense/expenseAnalysis.js:105:  console.log('💰 Updating expense KPIs');
scripts/reports/expense/expenseAnalysis.js:144:  console.log('💰 Expense KPIs updated:', currentMetrics);
scripts/reports/expense/expenseAnalysis.js:198:  console.log('📈 Rendering expense trend chart');
scripts/reports/expense/expenseAnalysis.js:288:  console.log('🍰 Rendering expense category chart');
scripts/reports/expense/expenseAnalysis.js:352:  console.log('📊 Rendering budget comparison chart');
scripts/reports/expense/expenseAnalysis.js:427:  console.log('📋 Loading top expense categories');
scripts/reports/expense/expenseAnalysis.js:480:  console.log('🔄 Loading expense types');
scripts/reports/expense/expenseAnalysis.js:526:  console.log('🛡️ Updating expense control dashboard');
scripts/reports/expense/expenseAnalysis.js:838:  console.log('📊 Exporting expense report...');
scripts/reports/expense/expenseAnalysis.js:843:  console.log('📊 Exporting category expense data...');
scripts/reports/expense/expenseAnalysis.js:847:  console.log('📊 Exporting expense types data...');
scripts/reports/expense/expenseAnalysis.js:851:  console.log(`🔄 Toggling ${chartType} chart to ${viewType} view`);
scripts/reports/expense/expenseAnalysis.js:855:  console.log(`✏️ Editing expense: ${expenseId}`);
scripts/reports/expense/expenseAnalysis.js:859:  console.log(`🔄 Refreshing expense chart for period: ${period}`);
scripts/reports/expense/expenseAnalysis.js:864:  console.log(`🔄 Refreshing budget chart for view: ${view}`);
scripts/reports/expense/expenseAnalysis.js:869:  console.log(`🔄 Refreshing expense table for view: ${view}`);
scripts/reports/expense/expenseAnalysis.js:874:  console.log(`🔄 Filtering expense types: ${filter}`);
scripts/reports/finance/financeReport.js:13:  console.log('💼 Loading finance report');
scripts/reports/finance/financeReport.js:46:    console.log('✅ Finance report placeholder loaded');
scripts/reports/finance/financialCharts.js:608:        console.log(`Updating financial charts for period: ${period}`);
scripts/reports/finance/financialCore.js:26:            console.log('💰 Initializing Financial Core...');
scripts/reports/finance/financialCore.js:35:            console.log('✅ Financial Core initialized successfully');
scripts/reports/finance/financialCore.js:52:            console.log('📊 Financial data loaded:', {
scripts/reports/finance/financialCore.js:154:        console.log('🔄 Processing financial data...');
scripts/reports/finance/financialCore.js:168:        console.log('✅ Financial data processed');
scripts/reports/finance/financialCore.js:391:        console.log('📊 Calculating financial metrics...');
scripts/reports/finance/financialCore.js:469:        console.log('✅ Financial metrics calculated:', this.financialMetrics);
scripts/reports/finance/financialCore.js:648:        console.log('📝 Generating mock financial data...');
scripts/reports/finance/financialCore.js:669:        console.log(`📊 Exporting financial data as ${format}...`);
scripts/reports/finance/financialLoader.js:28:            console.log('Initializing Financial Management...');
scripts/reports/finance/financialLoader.js:38:            console.log('✅ Financial Management initialized successfully');
scripts/reports/finance/financialLoader.js:54:            console.log('Financial data loaded successfully');
scripts/reports/finance/financialLoader.js:118:            console.log('Rendering financial dashboard...');
scripts/reports/finance/financialLoader.js:126:            console.log('✅ Financial dashboard rendered');
scripts/reports/finance/financialLoader.js:486:            console.log('✅', message);
scripts/reports/finance/financialLoader.js:510:        console.log('Financial Management destroyed');
scripts/reports/finance/financialReport.js:15:        console.log('🏦 Loading Financial Management...');
scripts/reports/finance/financialReport.js:31:        console.log('✅ Financial Management loaded successfully');
scripts/reports/finance/financialReport.js:58:        console.log('📄 Financial management template loaded from file');
scripts/reports/finance/financialReport.js:61:        console.log('📄 Using fallback financial template');
scripts/reports/finance/financialReport.js:176:        console.log('🏦 Initializing Financial Management...');
scripts/reports/finance/financialReport.js:191:    console.log('🧹 Financial Management cleaned up');
scripts/reports/overview/overviewReport.js:34:  console.log('📈 Loading overview report with options:', options);
scripts/reports/overview/overviewReport.js:56:    console.log('🔍 Checking data availability:', {
scripts/reports/overview/overviewReport.js:65:    console.log('📊 Data found:', {
scripts/reports/overview/overviewReport.js:76:    console.log('📅 Using date range:', dateRange);
scripts/reports/overview/overviewReport.js:77:    console.log('📅 Period:', period);
scripts/reports/overview/overviewReport.js:88:    console.log('💰 Calculated Updated KPIs:');
scripts/reports/overview/overviewReport.js:89:    console.log('  - Doanh thu gộp:', kpis.grossRevenue);
scripts/reports/overview/overviewReport.js:90:    console.log('  - Tiền đang chờ thu:', kpis.pendingCollection);
scripts/reports/overview/overviewReport.js:91:    console.log('  - Tiền đang chờ chi:', kpis.pendingPayment);
scripts/reports/overview/overviewReport.js:92:    console.log('  - Tổng tiền hoàn trả:', kpis.totalRefunds);
scripts/reports/overview/overviewReport.js:93:    console.log('  - Tỷ lệ hoàn tiền:', kpis.refundRate);
scripts/reports/overview/overviewReport.js:96:    console.log('🚀 Loading overview components...');
scripts/reports/overview/overviewReport.js:113:    console.log('🔄 FORCE CACHE REFRESH - v2.0.1');
scripts/reports/overview/overviewReport.js:114:    console.log('✅ Overview report loaded successfully with optimizations');
scripts/reports/overview/overviewReport.js:137:    console.log('✅ Template HTML loaded, length:', html.length);
scripts/reports/overview/overviewReport.js:142:      console.log('📝 Applying template to existing container');
scripts/reports/overview/overviewReport.js:145:      console.log('✅ Template applied to existing container');
scripts/reports/overview/overviewReport.js:151:        console.log('🗖️ Template verification after apply:', { hasCompleted, hasChart });
scripts/reports/overview/overviewReport.js:156:      console.log('✅ Template applied to new container');
scripts/reports/overview/overviewReport.js:159:    console.log('📄 NEW Overview HTML template loaded successfully');
scripts/reports/overview/overviewReport.js:168:      console.log('🔍 Template verification:', {
scripts/reports/overview/overviewReport.js:178:      console.log('📝 Container content preview:', container?.innerHTML?.substring(0, 200) + '...');
scripts/reports/overview/overviewReport.js:194:    console.log('📄 KPI structure already exists');
scripts/reports/overview/overviewReport.js:321:  console.log('📄 Overview structure enhanced with KPI cards');
scripts/reports/overview/overviewReport.js:380:  console.log('📅 🆕 NEW FIXED Date filtering setup:');
scripts/reports/overview/overviewReport.js:381:  console.log(`  - Period parameter: "${period}"`);
scripts/reports/overview/overviewReport.js:382:  console.log(`  - Period === 'all_time':`, period === 'all_time');
scripts/reports/overview/overviewReport.js:383:  console.log(`  - Using date range:`, dateRange);
scripts/reports/overview/overviewReport.js:384:  console.log(`  - Total transactions to filter: ${transactions.length}`);
scripts/reports/overview/overviewReport.js:385:  console.log(`  - Total expenses to filter: ${expenses.length}`);
scripts/reports/overview/overviewReport.js:391:  console.log('📅 📝 Checking period value...');
scripts/reports/overview/overviewReport.js:394:    console.log('📅 🔥 💯 🆕 ALL TIME BRANCH ACTIVATED - NO FILTERING!');
scripts/reports/overview/overviewReport.js:397:    console.log('📅 💯 Result: transactions =', filteredTransactions.length, ', expenses =', filteredExpenses.length);
scripts/reports/overview/overviewReport.js:400:    console.log('📊 Using date range filtering');
scripts/reports/overview/overviewReport.js:404:    console.log('📊 Filtered by date range:');
scripts/reports/overview/overviewReport.js:405:    console.log(`  - Transactions: ${transactions.length} → ${filteredTransactions.length}`);
scripts/reports/overview/overviewReport.js:406:    console.log(`  - Expenses: ${expenses.length} → ${filteredExpenses.length}`);
scripts/reports/overview/overviewReport.js:409:    console.log('📅 Using current month fallback for period:', period);
scripts/reports/overview/overviewReport.js:410:    console.log('📅 ❌ CURRENT MONTH FALLBACK ACTIVATED');
scripts/reports/overview/overviewReport.js:465:  console.log('📊 Revenue calculation by status:');
scripts/reports/overview/overviewReport.js:466:  console.log('  - Completed:', statusBreakdown.completed);
scripts/reports/overview/overviewReport.js:467:  console.log('  - Paid:', statusBreakdown.paid);
scripts/reports/overview/overviewReport.js:468:  console.log('  - Unpaid:', statusBreakdown.unpaid);
scripts/reports/overview/overviewReport.js:469:  console.log('  - Total revenue:', totalRevenue);
scripts/reports/overview/overviewReport.js:470:  console.log('  - Total transactions:', totalTransactions);
scripts/reports/overview/overviewReport.js:483:  console.log('📊 Revenue calculation by status:');
scripts/reports/overview/overviewReport.js:484:  console.log('  - Completed:', statusBreakdown.completed);
scripts/reports/overview/overviewReport.js:485:  console.log('  - Paid:', statusBreakdown.paid);
scripts/reports/overview/overviewReport.js:486:  console.log('  - Unpaid:', statusBreakdown.unpaid);
scripts/reports/overview/overviewReport.js:487:  console.log('  - Total transactions:', totalTransactions);
scripts/reports/overview/overviewReport.js:601:  console.log('✨ UPDATED updateKPICards - Using new business metrics structure');
scripts/reports/overview/overviewReport.js:602:  console.log('📊 New KPIs data structure:', kpis);
scripts/reports/overview/overviewReport.js:606:  console.log('🔍 Has new metrics structure:', hasNewMetrics);
scripts/reports/overview/overviewReport.js:613:    console.log('🆕 Using new template with updated business metrics structure');
scripts/reports/overview/overviewReport.js:616:    console.log('🎯 Updating Gross Revenue KPI Card:', {
scripts/reports/overview/overviewReport.js:671:    console.log('⚠️ Using new template but old metrics structure - legacy mapping');
scripts/reports/overview/overviewReport.js:717:    console.log('⚠️ Using old template - converting new metrics to old structure');
scripts/reports/overview/overviewReport.js:741:  console.log(`🔍 Looking for element: ${data.elementId}`);
scripts/reports/overview/overviewReport.js:742:  console.log(`🔍 Element found:`, !!valueElement);
scripts/reports/overview/overviewReport.js:751:  console.log(`💰 Updating KPI ${type}:`);
scripts/reports/overview/overviewReport.js:752:  console.log(`  - Element ID: ${data.elementId}`);
scripts/reports/overview/overviewReport.js:753:  console.log(`  - Raw value: ${data.value}`);
scripts/reports/overview/overviewReport.js:754:  console.log(`  - Growth: ${data.growth}%`);
scripts/reports/overview/overviewReport.js:755:  console.log(`  - Is percentage: ${data.isPercentage}`);
scripts/reports/overview/overviewReport.js:781:    console.log(`🔍 Template Detection for ${type} (${data.changeId}):`, {
scripts/reports/overview/overviewReport.js:790:      console.log(`🎯 Applying NEW METRIC template for ${type}:`, {
scripts/reports/overview/overviewReport.js:824:  console.log('📊 Updating status breakdown with new metrics structure');
scripts/reports/overview/overviewReport.js:867:  console.log('📊 Status breakdown updated:', {
scripts/reports/overview/overviewReport.js:936:    console.log('📊 Updating status detail table (charts removed)');
scripts/reports/overview/overviewReport.js:944:    console.log('✅ Status detail table updated with breakdown:', statusBreakdown);
scripts/reports/overview/overviewReport.js:983:  console.log('📈 Rendering revenue trend chart for period:', currentPeriod);
scripts/reports/overview/overviewReport.js:1495:  console.log('🍰 Status distribution chart with details rendered:', statusBreakdown);
scripts/reports/overview/overviewReport.js:1608:  console.log('📊 Status detail table updated with breakdown:', statusBreakdown);
scripts/reports/overview/overviewReport.js:2074:    console.log('📊 Using new table template');
scripts/reports/overview/overviewReport.js:2077:    console.log('📊 Using old table template');
scripts/reports/overview/overviewReport.js:2220:    console.log('✅ Enhanced top products loaded:', productAnalytics);
scripts/reports/overview/overviewReport.js:2541:    console.log('✅ Enhanced top customers loaded:', customerAnalytics);
scripts/reports/overview/overviewReport.js:2888:    console.log('✅ Summary stats loaded');
scripts/reports/overview/overviewReport.js:2934:  console.log('🆕 🔥 NEW FUNCTION - Date filtering setup:');
scripts/reports/overview/overviewReport.js:2935:  console.log(`  - Period parameter: "${period}"`);
scripts/reports/overview/overviewReport.js:2936:  console.log(`  - Period === 'all_time':`, period === 'all_time');
scripts/reports/overview/overviewReport.js:2937:  console.log(`  - Total transactions to filter: ${transactions.length}`);
scripts/reports/overview/overviewReport.js:2938:  console.log(`  - Total expenses to filter: ${expenses.length}`);
scripts/reports/overview/overviewReport.js:2944:    console.log('🆕 💯 ALL TIME ACTIVATED - NO FILTERING!');
scripts/reports/overview/overviewReport.js:2947:    console.log('🆕 💯 RESULT: transactions =', filteredTransactions.length);
scripts/reports/overview/overviewReport.js:2949:    console.log('🆕 Using current month filter for period:', period);
scripts/reports/overview/overviewReport.js:3001:  console.log('🆕 📊 NEW FUNCTION Revenue calculation:');
scripts/reports/overview/overviewReport.js:3002:  console.log('  - Filtered transactions:', totalTransactions);
scripts/reports/overview/overviewReport.js:3003:  console.log('  - Total revenue calculated:', totalRevenue);
scripts/reports/overview/overviewReport.js:3044:  console.log('📊 Updating status breakdown with refund support');
scripts/reports/overview/overviewReport.js:3107:  console.log('📊 Status breakdown updated:', statusBreakdown);
scripts/reports/overview/overviewReport.js:3142:  console.log('📈 Status highlights updated:', { refundImpact, successRate, netRevenue });
scripts/reports/overview/overviewReport.js:3177:    console.log('📋 Loading pending transactions...');
scripts/reports/overview/overviewReport.js:3199:    console.log('✅ Pending transactions loaded:', pendingCategories);
scripts/reports/overview/overviewReport.js:3525:  console.log('💾 Exporting status data...');
scripts/reports/overview/overviewReport.js:3567:    console.log('✅ Status data exported successfully');
scripts/reports/overview/overviewReport.js:3579:  console.log('🚚 Marking as delivered:', transactionId);
scripts/reports/overview/overviewReport.js:3589:  console.log('💰 Marking as paid:', transactionId);
scripts/reports/overview/overviewReport.js:3599:  console.log('🔔 Sending payment reminder:', transactionId);
scripts/reports/overview/overviewReport.js:3605:  console.log('👁️ Viewing transaction details:', transactionId);
scripts/reports/overview/overviewReport.js:3611:  console.log('🚚 Marking all as delivered');
scripts/reports/overview/overviewReport.js:3625:  console.log('💰 Marking all as paid');
scripts/reports/overview/overviewReport.js:3639:  console.log('🔔 Sending payment reminders');
scripts/reports/overview/overviewReport.js:3645:  console.log('📄 Showing overdue details');
scripts/reports/overview/overviewReport.js:3650:  console.log('🎆 Showing urgent deliveries');
scripts/reports/overview/overviewReport.js:3947:  console.log('💾 Exporting needs delivery data...');
scripts/reports/overview/overviewReport.js:3989:    console.log('✅ Needs delivery data exported successfully');
scripts/reports/overview/overviewReport.js:3997:  console.log('💾 Exporting needs payment data...');
scripts/reports/overview/overviewReport.js:4039:    console.log('✅ Needs payment data exported successfully');
scripts/reports/overview/overviewReport.js:4088:  console.log('👥 Viewing customer details:', customerIdentifier);
scripts/reports/overview/overviewReport.js:4127:  console.log('📺 Viewing product details:', productName);
scripts/reports/overview/overviewReport.js:4165:  console.log('💾 Exporting customer data...');
scripts/reports/overview/overviewReport.js:4216:    console.log('✅ Customer data exported successfully');
scripts/reports/overview/overviewReport.js:4227:  console.log('💾 Exporting software/product data...');
scripts/reports/overview/overviewReport.js:4290:    console.log('✅ Software/product data exported successfully');
scripts/reports/overview/overviewReport.js:4305:  console.log('🧮 Calculating updated business metrics with new logic...');
scripts/reports/overview/overviewReport.js:4306:  console.log('📊 Input data:', {
scripts/reports/overview/overviewReport.js:4313:  console.log(`📊 Working with ${filteredTransactions.length} pre-filtered transactions`);
scripts/reports/overview/overviewReport.js:4314:  console.log(`📊 Total unfiltered transactions available: ${allTransactions ? allTransactions.length : 0}`);
scripts/reports/overview/overviewReport.js:4345:  console.log(`📊 Processing ${filteredTransactions.length} transactions...`);
scripts/reports/overview/overviewReport.js:4351:      console.log(`⚠️ Transaction ${index} failed normalization:`, rawTransaction);
scripts/reports/overview/overviewReport.js:4361:      console.log(`💳 Transaction ${index}:`, {
scripts/reports/overview/overviewReport.js:4415:  console.log('📊 Raw status breakdown before calculations:', {
scripts/reports/overview/overviewReport.js:4425:  console.log(`💰 Gross Revenue Calculation: ${metrics.statusBreakdown.completed.amount} + ${metrics.statusBreakdown.paid.amount} - ${metrics.totalRefunds} = ${metrics.grossRevenue}`);
scripts/reports/overview/overviewReport.js:4444:    console.log('📊 Same period previous cycle range:', samePeriodPreviousCycleRange);
scripts/reports/overview/overviewReport.js:4445:    console.log(`📊 Same period transactions found: ${samePeriodTransactions.length}`);
scripts/reports/overview/overviewReport.js:4474:    console.log('📊 Previous same period metrics:', {
scripts/reports/overview/overviewReport.js:4490:  console.log('📈 DOANH THU GỘP - Growth Rate Calculation:');
scripts/reports/overview/overviewReport.js:4491:  console.log(`  Current Gross Revenue: ${metrics.grossRevenue}`);
scripts/reports/overview/overviewReport.js:4492:  console.log(`  Previous Period Gross Revenue: ${metrics.previousPeriod.grossRevenue}`);
scripts/reports/overview/overviewReport.js:4493:  console.log(`  Growth Rate: ${metrics.growthRates.grossRevenue.toFixed(2)}%`);
scripts/reports/overview/overviewReport.js:4495:  console.log('📈 Final metrics calculated:');
scripts/reports/overview/overviewReport.js:4496:  console.log('  💰 Doanh thu gộp:', formatCurrency(metrics.grossRevenue));
scripts/reports/overview/overviewReport.js:4497:  console.log('  ⏳ Tiền đang chờ thu:', formatCurrency(metrics.pendingCollection));
scripts/reports/overview/overviewReport.js:4498:  console.log('  💸 Tiền đang chờ chi:', formatCurrency(metrics.pendingPayment));
scripts/reports/overview/overviewReport.js:4499:  console.log('  🔄 Tổng tiền hoàn trả:', formatCurrency(metrics.totalRefunds));
scripts/reports/overview/overviewReport.js:4500:  console.log('  📊 Tỷ lệ hoàn tiền:', `${metrics.refundRate.toFixed(2)}%`);
scripts/reports/overview/overviewReport.js:4501:  console.log('  📋 Status breakdown:', metrics.statusBreakdown);
scripts/reports/overview/overviewReport.js:4502:  console.log('  📈 Growth rates:', metrics.growthRates);
scripts/reports/overview/overviewReport.js:4516:  console.log('📅 Current period:', { start: currentRange.start, end: currentRange.end });
scripts/reports/overview/overviewReport.js:4540:  console.log('📅 Same period previous cycle:', result);
scripts/reports/overview/overviewReport.optimized.js:20:    console.log('⚡ Template already loaded, skipping fetch');
scripts/reports/overview/overviewReport.optimized.js:42:    console.log('⚡ Template loaded:', html.length, 'chars');
scripts/reports/overview/overviewReport.optimized.js:53:      console.log('✅ Template loaded & verified successfully');
scripts/reports/overview/overviewReport.optimized.js:80:      console.log('⚡ Using cached template:', url);
scripts/reports/overview/overviewReport.optimized.js:86:      console.log('⚡ Template fetch in progress, waiting...');
scripts/reports/overview/overviewReport.optimized.js:120:    console.log('🗑️ Template cache cleared');
scripts/reports/overview/overviewReport.optimized.js:136:    console.log('⚡ Template already in DOM');
scripts/reports/overview/overviewReport.optimized.js:147:      console.log('✅ Template rendered with caching');
scripts/reports/overview/overviewReport.optimized.js:165:  console.log('⚡ Preloading templates...');
scripts/reports/overview/overviewReport.optimized.js:169:    console.log('✅ All templates preloaded');
scripts/reports/profit/profitAnalysis.js:19:    console.log('💰 Loading profit analysis report', options);
scripts/reports/profit/profitAnalysis.js:38:        console.log('📊 Profit analysis data:', {
scripts/reports/profit/profitAnalysis.js:52:        console.log('📊 Profit analysis data filtering:', {
scripts/reports/profit/profitAnalysis.js:74:        console.log('✅ Profit analysis report loaded successfully');
scripts/reports/profit/profitAnalysis.js:99:        console.log('✅ Profit analysis template loaded');
scripts/reports/profit/profitAnalysis.js:111:    console.log('💰 Updating profit KPIs');
scripts/reports/profit/profitAnalysis.js:148:    console.log('💰 Profit KPIs updated:', profitMetrics);
scripts/reports/profit/profitAnalysis.js:155:    console.log('💰 Loading profit analysis data for table');
scripts/reports/profit/profitAnalysis.js:167:        console.log('💰 Profit analysis data loaded:', profitMetrics);
scripts/reports/profit/profitAnalysis.js:265:                    console.log(`📊 Renewal < End Date calculation:`, {
scripts/reports/profit/profitAnalysis.js:279:                    console.log(`📊 Renewal >= End Date calculation:`, {
scripts/reports/profit/profitAnalysis.js:289:                console.log(`📊 Final allocated cost summary:`, {
scripts/reports/profit/profitAnalysis.js:306:    console.log(`💰 Expense metrics calculated:`, {
scripts/reports/profit/profitAnalysis.js:410:    console.log('📈 Rendering profit trend chart');
scripts/reports/profit/profitAnalysis.js:489:    console.log('🍰 Rendering profit breakdown chart');
scripts/reports/profit/profitAnalysis.js:551:    console.log('💡 Updating profit insights');
scripts/reports/profit/profitAnalysis.js:886:    console.log(`🔄 Refreshing profit chart for period: ${period}`);
scripts/reports/profit/profitAnalysis.js:896:    console.log('📊 Exporting profit report...');
scripts/reports/profit/profitAnalysis.js:901:    console.log(`🔄 Toggling ${chartType} chart to ${viewType} view`);
scripts/reports/profit/profitAnalysis.js:908:    console.log('💰 Updating profit overview grid');
scripts/reports/profit/profitAnalysis.js:952:    console.log('💰 Profit overview grid updated');
scripts/reports/profit/profitAnalysis.js:959:    console.log('💻 Loading software profit analysis');
scripts/reports/profit/profitAnalysis.js:971:        console.log('💻 Software profit analysis loaded:', softwareProfitData.length, 'software items');
scripts/reports/profit/profitAnalysis.js:982:    console.log('🔢 Calculating software profit metrics');
scripts/reports/profit/profitAnalysis.js:1047:    console.log('🔍 BƯỚC 1: Liệt kê danh sách tên chuẩn duy nhất từ 3 nguồn...');
scripts/reports/profit/profitAnalysis.js:1048:    console.log('📅 Chu kỳ báo cáo:', dateRange ? `${dateRange.start} đến ${dateRange.end}` : 'Không xác định');
scripts/reports/profit/profitAnalysis.js:1067:            console.log(`📊 Giao dịch #${index + 1}:`, {
scripts/reports/profit/profitAnalysis.js:1085:    console.log(`✅ Nguồn 1 - GiaoDich có doanh thu: ${revenueSource} records, ${revenueNames.size} tên chuẩn unique`);
scripts/reports/profit/profitAnalysis.js:1086:    console.log(`📋 Danh sách từ GiaoDich:`, Array.from(revenueNames).sort());
scripts/reports/profit/profitAnalysis.js:1108:            console.log(`💰 Chi phí #${index + 1}:`, {
scripts/reports/profit/profitAnalysis.js:1141:    console.log(`✅ Nguồn 2 - ChiPhi trong chu kỳ: ${directCostSource} records, ${directCostNames.size} tên chuẩn unique`);
scripts/reports/profit/profitAnalysis.js:1142:    console.log(`📋 Danh sách từ ChiPhi:`, Array.from(directCostNames).sort());
scripts/reports/profit/profitAnalysis.js:1160:            console.log(`🏢 Found văn phòng expense #${index + 1}:`, {
scripts/reports/profit/profitAnalysis.js:1180:            console.log(`📈 Chi phí phân bổ #${index + 1}:`, {
scripts/reports/profit/profitAnalysis.js:1219:    console.log(`✅ Nguồn 3 - Chi phí phân bổ: ${allocatedCostSource} records, ${allocatedCostNames.size} tên chuẩn unique`);
scripts/reports/profit/profitAnalysis.js:1220:    console.log(`📋 Danh sách từ Chi phí phân bổ:`, Array.from(allocatedCostNames).sort());
scripts/reports/profit/profitAnalysis.js:1224:    console.log(`\n🎯 KẾT QUẢ BƯỚC 1 - Danh sách tên chuẩn duy nhất:`);
scripts/reports/profit/profitAnalysis.js:1225:    console.log(`📊 Tổng số tên chuẩn unique: ${finalList.length}`);
scripts/reports/profit/profitAnalysis.js:1226:    console.log(`📋 Danh sách cuối cùng:`, finalList);
scripts/reports/profit/profitAnalysis.js:1227:    console.log(`📈 Thống kê nguồn dữ liệu:`);
scripts/reports/profit/profitAnalysis.js:1228:    console.log(`   - Từ GiaoDich có doanh thu: ${revenueNames.size} tên chuẩn`);
scripts/reports/profit/profitAnalysis.js:1229:    console.log(`   - Từ ChiPhi trong chu kỳ: ${directCostNames.size} tên chuẩn`);
scripts/reports/profit/profitAnalysis.js:1230:    console.log(`   - Từ Chi phí phân bổ: ${allocatedCostNames.size} tên chuẩn`);
scripts/reports/profit/profitAnalysis.js:1291:    console.log(`🔍 DEBUG SOFTWARE ALLOCATED COSTS - START:`, {
scripts/reports/profit/profitAnalysis.js:1300:        console.log(`📋 Sample expense data (first 3 items):`, expenses.slice(0, 3));
scripts/reports/profit/profitAnalysis.js:1304:            console.log(`📊 Available fields in expense object:`, Object.keys(expenses[0]));
scripts/reports/profit/profitAnalysis.js:1305:            console.log(`📊 Field values that might contain software name:`, {
scripts/reports/profit/profitAnalysis.js:1322:            console.log(`🏢 Found ${vanHanhExpenses.length} expenses with "văn phòng":`, vanHanhExpenses);
scripts/reports/profit/profitAnalysis.js:1332:            console.log(`📦 Expense #${index + 1} full data:`, expense);
scripts/reports/profit/profitAnalysis.js:1341:            console.log(`🔤 Expense #${index + 1} tenChuan comparison:`, {
scripts/reports/profit/profitAnalysis.js:1353:            console.log(`✅ MATCHED expense #${index + 1} for ${softwareName}:`, {
scripts/reports/profit/profitAnalysis.js:1370:            console.log(`🔢 Processing allocation for matched expense:`, {
scripts/reports/profit/profitAnalysis.js:1389:                    console.log(`💸 Added to direct costs: ${amount} (total direct: ${directCosts})`);
scripts/reports/profit/profitAnalysis.js:1394:                console.log(`🔍 Checking allocated cost conditions:`, {
scripts/reports/profit/profitAnalysis.js:1428:                        console.log(`📊 Allocated calculation (renewal < end):`, {
scripts/reports/profit/profitAnalysis.js:1440:                        console.log(`📊 Allocated calculation (renewal >= end):`, {
scripts/reports/profit/profitAnalysis.js:1450:                    console.log(`💰 Added to allocated costs: ${allocatedAmount} (total allocated: ${allocatedCosts})`);
scripts/reports/profit/profitAnalysis.js:1458:    console.log(`💰 SOFTWARE ALLOCATED COSTS FINAL RESULT for ${softwareName}:`, {
scripts/reports/profit/profitAnalysis.js:1475:    console.log(`🔍 DEBUG SOFTWARE DIRECT COSTS - START:`, {
scripts/reports/profit/profitAnalysis.js:1506:        console.log(`🔢 Processing direct cost for matched expense (tenChuan):`, {
scripts/reports/profit/profitAnalysis.js:1527:                console.log(`💰 Added direct cost:`, {
scripts/reports/profit/profitAnalysis.js:1540:    console.log(`💰 SOFTWARE DIRECT COSTS FINAL RESULT for ${softwareName}:`, {
scripts/reports/profit/profitAnalysis.js:1739:    console.log(`🔄 Sorting software profit table by: ${sortBy}`);
scripts/reports/profit/profitAnalysis.js:1764:    console.log('📊 Exporting software profit report...');
scripts/reports/renewal/renewalReport.js:15:  console.log('🔄 Loading renewal report');
scripts/reports/renewal/renewalReport.js:43:    console.log('✅ Renewal report loaded');
scripts/reports/reportMenuController.js:35:  console.log('🎮 Initializing report menu controller');
scripts/reports/reportMenuController.js:38:  console.log('🔍 Checking containers:', {
scripts/reports/reportMenuController.js:56:  console.log('✅ Report menu controller initialized');
scripts/reports/reportMenuController.js:86:  console.log(`📊 Loading report: ${reportType}`);
scripts/reports/revenue/revenueAnalysis.js:29:  console.log('📈 Loading revenue analysis with options:', options);
scripts/reports/revenue/revenueAnalysis.js:42:    console.log('📊 Revenue analysis data:', {
scripts/reports/revenue/revenueAnalysis.js:67:    console.log('✅ Revenue analysis loaded successfully');
scripts/reports/revenue/revenueAnalysis.js:92:    console.log('✅ Revenue analysis template loaded');
scripts/reports/revenue/revenueAnalysis.js:104:  console.log('💰 Updating revenue KPIs');
scripts/reports/revenue/revenueAnalysis.js:140:  console.log('💰 Revenue KPIs updated:', currentMetrics);
scripts/reports/revenue/revenueAnalysis.js:193:  console.log('📈 Rendering revenue trend chart');
scripts/reports/revenue/revenueAnalysis.js:283:  console.log('🍰 Rendering revenue category chart');
scripts/reports/revenue/revenueAnalysis.js:347:  console.log('👥 Loading top customers by revenue');
scripts/reports/revenue/revenueAnalysis.js:400:  console.log('💻 Loading top products by revenue');
scripts/reports/revenue/revenueAnalysis.js:453:  console.log('💡 Updating revenue insights');
scripts/reports/revenue/revenueAnalysis.js:760:  console.log('📊 Exporting revenue report...');
scripts/reports/revenue/revenueAnalysis.js:765:  console.log('📊 Exporting customer revenue data...');
scripts/reports/revenue/revenueAnalysis.js:769:  console.log('📊 Exporting product revenue data...');
scripts/reports/revenue/revenueAnalysis.js:773:  console.log(`🔄 Toggling ${chartType} chart to ${viewType} view`);
scripts/reports/revenue/revenueAnalysis.js:777:  console.log(`🔄 Refreshing revenue chart for period: ${period}`);
scripts/reports/revenue/revenueAnalysis.js:782:  console.log(`🔄 Refreshing customer table for view: ${view}`);
scripts/reports/revenue/revenueAnalysis.js:787:  console.log(`🔄 Refreshing product table for sort: ${sort}`);
scripts/reports/revenue/revenueReport.js:15:  console.log('💰 Loading revenue report');
scripts/reports/revenue/revenueReport.js:27:    console.log('✅ Revenue report loaded');
scripts/reports/software/softwareManagement.js:22:    console.log('💻 Loading software management report', options);
scripts/reports/software/softwareManagement.js:42:        console.log('✅ Software management report loaded successfully');
scripts/reports/software/softwareManagementCore.js:25:            console.log('🔧 Initializing Software Management with actual sheet data...');
scripts/reports/software/softwareManagementCore.js:38:            console.log('✅ Software Management initialized successfully');
scripts/reports/software/softwareManagementCore.js:53:            console.log('📊 Data loaded:', {
scripts/reports/software/softwareManagementCore.js:154:        console.log('🔄 Processing and combining data...');
scripts/reports/software/softwareManagementCore.js:234:        console.log('✅ Data processing completed:', this.filteredAccounts.length, 'software accounts');
scripts/reports/software/softwareManagementCore.js:262:        console.log('🎭 Generating mock data for demonstration...');
scripts/reports/software/softwareManagementCore.js:1166:        console.log('Refreshing account:', accountId);
scripts/reports/software/softwareManagementCore.js:1171:        console.log('Optimizing account:', accountId);
scripts/reports/software/softwareManagementCore.js:1245:                console.log('Bulk renewal action');
scripts/reports/software/softwareManagementCore.js:1248:                console.log('Utilization optimization action');
scripts/reports/software/softwareManagementCore.js:1251:                console.log('Cost optimization action');
scripts/reports/software/softwareManagementCore.js:1257:                console.log('Account security action');
scripts/reports/software/softwareManagementCore.js:1260:                console.log('License compliance action');
scripts/reports/software/softwareManagementCore.js:1295:        console.log('Generating comprehensive software report...');
scripts/reports/software/softwareManagementCore.js:1299:        console.log('🔄 Refreshing software management data...');
scripts/revenueExpenseChart.js:8:console.log('📦 revenueExpenseChart.js orchestrator loading...');
scripts/revenueExpenseChart.js:51:  console.log('📢 calculateChartData called with:', {
scripts/revenueExpenseChart.js:58:  console.log('📅 Granularity:', granularity);
scripts/revenueExpenseChart.js:83:  console.log('🎯 renderRevenueExpenseChart orchestrator called with:', {
scripts/revenueExpenseChart.js:101:  console.log('📆 Calculating chart data...');
scripts/revenueExpenseChart.js:103:  console.log('📊 Chart data calculated:', chartData);
scripts/revenueExpenseChart.js:108:    console.log('🔄 Calculating compare data...');
scripts/revenueExpenseChart.js:120:      console.log('🔄 Compare data calculated:', compareData);
scripts/revenueExpenseChart.js:214:  console.log('🔨 Setting container HTML...');
scripts/revenueExpenseChart.js:220:  console.log('✅ Chart rendered successfully with modular components');
scripts/revenueExpenseChart.js:420:console.log('✅ revenueExpenseChart.js module loaded successfully');
scripts/statistics/calculations.js:32:  console.log("🧮 Calculating expenses:", {
scripts/statistics/calculations.js:74:  console.log("✅ Expense totals calculated:", totals);
scripts/statistics/calculations.js:101:  console.log("🧮 Calculating revenue:", {
scripts/statistics/calculations.js:149:  console.log("✅ Revenue totals calculated:", totals);
scripts/statistics/calculations.js:189:  console.log("📈 Financial analysis completed:", analysis.summary);
scripts/statistics/calculations.js:234:    console.log(`🔍 DEBUG - Salary/Helium10 expense object:`, {
scripts/statistics/calculations.js:253:    console.log(`❌ ${expense.product || expense.description || 'Unknown'} - No allocation:`, {
scripts/statistics/calculations.js:271:  console.log(`📅 Date parsing for ${expense.product || expense.description}:`, {
scripts/statistics/calculations.js:284:    console.log(`❌ ${expense.product || expense['Tên sản phẩm/Dịch vụ'] || expense.description} - Invalid dates:`, {
scripts/statistics/calculations.js:303:  console.log(`💰 Amount parsing for ${expense.product || expense['Tên sản phẩm/Dịch vụ']}:`, {
scripts/statistics/calculations.js:336:    console.log(`💵 Salary payment debug:`, {
scripts/statistics/calculations.js:362:  console.log(`📊 Allocated expense calculation:`, {
scripts/statistics/calculations.js:411:    console.log(`💰 Actual expense calculation:`, {
scripts/statistics/calculations.js:509:  console.log(`📅 Monthly expense breakdown for ${breakdown.targetMonth}:`, {
scripts/statistics/dataUtilities.js:153:  console.log("📊 Grouping expenses by month:", {
scripts/statistics/dataUtilities.js:200:  console.log("✅ Monthly grouping completed:", summaryArray.length, "entries");
scripts/statistics/dataUtilities.js:221:  console.log("📊 Grouping revenue by month:", {
scripts/statistics/dataUtilities.js:268:  console.log("✅ Revenue grouping completed:", summaryArray.length, "entries");
scripts/statistics/periodHandlers.js:66:  console.log(`📅 Generated ${period} range:`, ranges);
scripts/statistics-data/dataCacheManager.js:65:  console.log(`📦 Cache updated for ${cacheKey}:`, 
scripts/statistics-data/dataCacheManager.js:76:    console.log(`⏱️ Cache miss or expired for ${cacheKey}`);
scripts/statistics-data/dataCacheManager.js:80:  console.log(`📦 Cache hit for ${cacheKey}`);
scripts/statistics-data/dataCacheManager.js:99:      console.log(`🗑️ Cache cleared for ${cacheKey}`);
scripts/statistics-data/dataCacheManager.js:111:    console.log("🗑️ All caches cleared");
scripts/statistics-data/dataCacheManager.js:156:    console.log(`⏱️ TTL updated for ${cacheKey}: ${ttl}ms`);
scripts/statistics-data/dataCacheManager.js:190:    console.log(`🗑️ Removed oldest search cache entry`);
scripts/statistics-data/dataCacheManager.js:200:  console.log(`📦 Cached search results: ${results.length} items`);
scripts/statistics-data/dataCacheManager.js:221:    console.log(`⏱️ Search cache expired for query`);
scripts/statistics-data/dataCacheManager.js:225:  console.log(`📦 Search cache hit: ${cached.results.length} items`);
scripts/statistics-data/dataCacheManager.js:237:    console.log(`🚀 Cache preloaded for ${cacheKey}`);
scripts/statistics-data/dataCacheManager.js:310:  console.log(`🧹 Cache optimized: ${removed} expired entries removed`);
scripts/statistics-data/dataFetchers.js:20:  console.log("🔄 Fetching expense data from API...");
scripts/statistics-data/dataFetchers.js:44:      console.log("✅ Expense data fetched successfully:", expenseData.length, "records");
scripts/statistics-data/dataFetchers.js:71:  console.log("🔄 Fetching transaction data from API...");
scripts/statistics-data/dataFetchers.js:95:      console.log("✅ Transaction data fetched successfully:", transactionData.length, "records");
scripts/statistics-data/dataFetchers.js:122:  console.log("🔄 Fetching expense options from API...");
scripts/statistics-data/dataFetchers.js:149:      console.log("✅ Expense options fetched successfully");
scripts/statistics-data/dataFetchers.js:176:  console.log("🔍 Searching expenses with filters:", filters);
scripts/statistics-data/dataFetchers.js:203:      console.log("✅ Expense search completed:", searchResults.length, "results");
scripts/statistics-data/dataFetchers.js:230:  console.log("🔍 Searching transactions with filters:", filters);
scripts/statistics-data/dataFetchers.js:257:      console.log("✅ Transaction search completed:", searchResults.length, "results");
scripts/statistics-renderer/chartRenderer.js:31:  console.log(`📈 Rendering ${chartType} chart:`, data.length, "data points");
scripts/statistics-renderer/chartRenderer.js:110:  console.log("📊 Line chart rendering not yet implemented");
scripts/statistics-renderer/chartRenderer.js:122:  console.log("📊 Pie chart rendering not yet implemented");
scripts/statistics-renderer/summaryRenderer.js:27:  console.log("💰 Rendering financial overview");
scripts/statistics-renderer/summaryRenderer.js:58:  console.log("✅ Financial overview rendered successfully");
scripts/statistics-renderer/tableRenderer.js:27:    console.log(`⏭️ Statistics tab not active, skipping table render`);
scripts/statistics-renderer/tableRenderer.js:37:    console.log(`🔧 Creating missing tbody for table ${tableId}`);
scripts/statistics-renderer/tableRenderer.js:49:  console.log("📊 Rendering monthly summary table:", summaryData.length, "entries");
scripts/statistics-renderer/tableRenderer.js:67:  console.log("✅ Monthly summary table rendered successfully");
scripts/statistics-renderer/tableRenderer.js:165:  console.log("🔍 DEBUG loading elements after render:", {
scripts/statistics-renderer/tableRenderer.js:179:      console.log(`🚫 Hiding loading element:`, el.className || el.id);
scripts/statisticsCore.js:65:  console.log("🧮 Calculating expenses:", {
scripts/statisticsCore.js:107:  console.log("✅ Expense totals calculated:", totals);
scripts/statisticsCore.js:134:  console.log("🧮 Calculating revenue:", {
scripts/statisticsCore.js:182:  console.log("✅ Revenue totals calculated:", totals);
scripts/statisticsCore.js:203:  console.log("📊 Grouping expenses by month:", {
scripts/statisticsCore.js:250:  console.log("✅ Monthly grouping completed:", summaryArray.length, "entries");
scripts/statisticsCore.js:271:  console.log("📊 Grouping revenue by month:", {
scripts/statisticsCore.js:318:  console.log("✅ Revenue grouping completed:", summaryArray.length, "entries");
scripts/statisticsCore.js:358:  console.log("📈 Financial analysis completed:", analysis.summary);
scripts/statisticsCore.js:418:  console.log(`📅 Generated ${period} range:`, ranges);
scripts/statisticsCore.js:579:    console.log(`🔍 DEBUG - Salary/Helium10 expense object:`, {
scripts/statisticsCore.js:598:    console.log(`❌ ${expense.product || expense.description || 'Unknown'} - No allocation:`, {
scripts/statisticsCore.js:616:  console.log(`📅 Date parsing for ${expense.product || expense.description}:`, {
scripts/statisticsCore.js:629:    console.log(`❌ ${expense.product || expense['Tên sản phẩm/Dịch vụ'] || expense.description} - Invalid dates:`, {
scripts/statisticsCore.js:648:  console.log(`💰 Amount parsing for ${expense.product || expense['Tên sản phẩm/Dịch vụ']}:`, {
scripts/statisticsCore.js:681:    console.log(`💵 Salary payment debug:`, {
scripts/statisticsCore.js:707:  console.log(`📊 Allocated expense calculation:`, {
scripts/statisticsCore.js:809:  console.log(`📅 Monthly expense breakdown for ${breakdown.targetMonth}:`, {
scripts/statisticsCore.js:903:    console.log(`🗺️ Test: ${test.name}`, {
scripts/statisticsCore.js:911:  console.log(`🏆 Test Results: ${totalPassed}/${results.length} tests passed`);
scripts/statisticsCore.js:947:    console.log(`💰 Actual expense calculation:`, {
scripts/statisticsCore.js:975:      console.log(`🚫 Excluding expense from ROI:`, {
scripts/statisticsCore.js:985:  console.log(`🛡️ Filtered expenses for ROI:`, {
scripts/statisticsCore.js:1034:        console.log(`📊 ${tenChuan} - Allocated expense:`, {
scripts/statisticsCore.js:1045:          console.log(`💰 ${tenChuan} - Non-allocated actual expense:`, {
scripts/statisticsCore.js:1189:  console.log("📊 Calculating business metrics for period:", dateRange);
scripts/statisticsDataManager.js:178:  console.log("📊 Fetching combined statistics data...");
scripts/statisticsDataManager.js:199:    console.log("✅ Combined statistics data ready:", {
scripts/statisticsDataManager.js:220:  console.log("🚀 Preloading statistics data...");
scripts/statisticsDataManager.js:237:      console.log("✅ Statistics data preloaded successfully");
scripts/statisticsDataManager.js:257:  console.log(`📤 Exporting ${data.length} records as ${format}...`);
scripts/statisticsDataManager.js:294:    console.log("✅ Export completed successfully");
scripts/statisticsOrchestrator.js:40:console.log('📊 Statistics functions available directly from statisticsCore.js');
scripts/statisticsUIController.js:8:console.log('📦 statisticsUIController.js orchestrator loading...');
scripts/statisticsUIController.js:73:  console.log("🎮 Initializing statistics UI controller orchestrator");
scripts/statisticsUIController.js:94:      console.log("🎮 Initializing report menu...");
scripts/statisticsUIController.js:112:  console.log("✅ Statistics UI controller orchestrator initialized");
scripts/statisticsUIController.js:120:  console.log("📤 Exporting data in format:", format);
scripts/statisticsUIController.js:164:    console.log("🔄 Refreshing statistics display using orchestrator...");
scripts/statisticsUIController.js:170:    console.log("🔍 DEBUG refreshStatistics:", {
scripts/statisticsUIController.js:177:      console.log("⏭️ Not in statistics tab, skipping enhanced render");
scripts/statisticsUIController.js:187:    console.log("🎯 About to call renderEnhancedStatistics with processed data:", {
scripts/statisticsUIController.js:205:    console.log("✅ Statistics refreshed successfully using orchestrator");
scripts/statisticsUIController.js:227:  console.log("🎮 UI state updated:", uiState);
scripts/statisticsUIController.js:234:  console.log("🔄 Forcing statistics refresh using orchestrator...");
scripts/statisticsUIController.js:252:  console.log("🔄 Resetting statistics UI using orchestrator...");
scripts/statisticsUIController.js:275:  console.log("🔄 Refreshing statistics with global filters using orchestrator:", globalFilters);
scripts/statisticsUIController.js:292:    console.log("✅ Statistics refreshed with filters using orchestrator");
scripts/statisticsUIController.js:307:console.log('✅ statisticsUIController.js orchestrator loaded successfully');
scripts/testTabPermissions.js:2:console.log('=== Testing Tab Permissions ===');
scripts/testTabPermissions.js:25:  console.log(`\n📝 Testing input: "${input}"`);
scripts/testTabPermissions.js:29:  console.log('  Parsed permissions:', permissions);
scripts/testTabPermissions.js:33:    console.log(`  Checking: "${permission}"`);
scripts/testTabPermissions.js:35:      console.log(`    ✅ Found: ${TAB_MAPPING[permission]}`);
scripts/testTabPermissions.js:38:      console.log(`    ❌ Not found`);
scripts/testTabPermissions.js:42:  console.log('  Final allowed tabs:', Array.from(allowedTabs));
scripts/testTabPermissions.js:45:console.log('\n🗂️ Available mappings:');
scripts/testTabPermissions.js:47:  console.log(`  "${key}" -> ${value}`);
scripts/transactionTypeManager.js:84:  console.log('🔄 Initializing transaction type dropdown for new transaction');
scripts/transactionTypeManager.js:100:  console.log('✅ Transaction type dropdown initialized with default options');
scripts/transactionTypeManager.js:112:  console.log('🔄 Updating transaction type dropdown for edit mode:', {
scripts/transactionTypeManager.js:141:  console.log(`✅ Added ${allowedOptions.length} options for ${originalStatus}:`, allowedOptions);
scripts/transactionTypeManager.js:146:    console.log(`✅ Set current value: ${currentValue}`);
scripts/ui-statistics/chartRenderers.js:8:console.log('📦 chartRenderers.js module loading...');
scripts/ui-statistics/chartRenderers.js:48:    console.log("✅ Overview tab rendered");
scripts/ui-statistics/chartRenderers.js:74:    console.log("✅ Expenses tab rendered");
scripts/ui-statistics/chartRenderers.js:107:    console.log("✅ Revenue tab rendered");
scripts/ui-statistics/chartRenderers.js:120:    console.log("🎨 Rendering Enhanced Statistics with Business Overview Dashboard...");
scripts/ui-statistics/chartRenderers.js:148:    console.log("✅ Business Overview Dashboard rendered");
scripts/ui-statistics/chartRenderers.js:154:      onExport: window.handleDataExport || (() => console.log("Export handler not found"))
scripts/ui-statistics/chartRenderers.js:156:    console.log("✅ Export controls rendered");
scripts/ui-statistics/chartRenderers.js:161:    console.log("🎉 Enhanced Statistics rendering complete!");
scripts/ui-statistics/chartRenderers.js:172:      console.log("✅ Fallback to old financial dashboard");
scripts/ui-statistics/chartRenderers.js:207:    console.log("✅ Monthly summary table rendered");
scripts/ui-statistics/chartRenderers.js:234:    console.log("✅ Default tab rendered");
scripts/ui-statistics/chartRenderers.js:282:    console.log(`✅ Custom chart rendered in ${containerId}`);
scripts/ui-statistics/chartRenderers.js:325:    console.log(`✅ Comparison chart rendered in ${containerId}`);
scripts/ui-statistics/chartRenderers.js:363:    console.log(`✅ Category pie chart rendered in ${containerId}`);
scripts/ui-statistics/chartRenderers.js:401:    console.log(`✅ Trend chart rendered in ${containerId}`);
scripts/ui-statistics/chartRenderers.js:416:    console.log(`🧹 Charts cleared in ${containerId}`);
scripts/ui-statistics/chartRenderers.js:451:    console.log("✅ All charts refreshed");
scripts/ui-statistics/chartRenderers.js:465:console.log('✅ chartRenderers.js module loaded successfully');
scripts/ui-statistics/dataProcessors.js:8:console.log('📦 dataProcessors.js module loading...');
scripts/ui-statistics/dataProcessors.js:39:    console.log("🔄 Loading statistics data...");
scripts/ui-statistics/dataProcessors.js:54:    console.log("📊 Combined data prepared:", {
scripts/ui-statistics/dataProcessors.js:63:    console.log("🎯 Data loading completed");
scripts/ui-statistics/dataProcessors.js:74:    console.log("🔍 DEBUG data loading state:", dataLoadState);
scripts/ui-statistics/dataProcessors.js:75:    console.log("✅ Statistics data loaded successfully");
scripts/ui-statistics/dataProcessors.js:292:  console.log("🔄 Forcing data refresh...");
scripts/ui-statistics/dataProcessors.js:385:    console.log("🚫 Force closing any processing modals");
scripts/ui-statistics/dataProcessors.js:397:  console.log("🔍 DEBUG modal elements:", {
scripts/ui-statistics/dataProcessors.js:410:      console.log(`🚫 Force hiding modal:`, el.id || el.className);
scripts/ui-statistics/dataProcessors.js:421:console.log('✅ dataProcessors.js module loaded successfully');
scripts/ui-statistics/displayManagers.js:8:console.log('📦 displayManagers.js module loading...');
scripts/ui-statistics/displayManagers.js:26:  console.log("✅ Success:", message);
scripts/ui-statistics/displayManagers.js:83:  console.log("ℹ️ Info:", message);
scripts/ui-statistics/displayManagers.js:131:    console.log(`🔄 Loading started for ${elementId}`);
scripts/ui-statistics/displayManagers.js:157:    console.log(`✅ Loading ended for ${elementId}`);
scripts/ui-statistics/displayManagers.js:244:    console.log(`📱 Modal ${modalId} shown`);
scripts/ui-statistics/displayManagers.js:269:    console.log(`🚫 Modal ${modalId} hidden`);
scripts/ui-statistics/displayManagers.js:509:  console.log("🧹 Display managers cleaned up");
scripts/ui-statistics/displayManagers.js:607:console.log('✅ displayManagers.js module loaded successfully');
scripts/ui-statistics/uiHandlers.js:8:console.log('📦 uiHandlers.js module loading...');
scripts/ui-statistics/uiHandlers.js:129:  console.log("📊 Statistics tab activated");
scripts/ui-statistics/uiHandlers.js:136:  console.log("🔍 DEBUG handleStatisticsTabActivation initial state:", {
scripts/ui-statistics/uiHandlers.js:152:      console.log("🔍 DEBUG handleStatisticsTabActivation after timeout:", {
scripts/ui-statistics/uiHandlers.js:162:        console.log("🔄 Loading statistics data (no existing data)");
scripts/ui-statistics/uiHandlers.js:167:        console.log("🔄 Refreshing statistics (using existing data)");
scripts/ui-statistics/uiHandlers.js:175:        console.log("📊 Rendering pending statistics data...");
scripts/ui-statistics/uiHandlers.js:190:  console.log("🔄 Switching to sub-tab:", subTab);
scripts/ui-statistics/uiHandlers.js:221:  console.log("📅 Date range changed to:", range);
scripts/ui-statistics/uiHandlers.js:231:  console.log("🔄 Resetting UI controls...");
scripts/ui-statistics/uiHandlers.js:329:console.log('✅ uiHandlers.js module loaded successfully');
scripts/ui-statistics/viewControllers.js:8:console.log('📦 viewControllers.js module loading...');
scripts/ui-statistics/viewControllers.js:34:      console.log(`🔄 Switching to view: ${viewName}`);
scripts/ui-statistics/viewControllers.js:86:      console.log(`✅ Switched to view: ${viewName}`);
scripts/ui-statistics/viewControllers.js:99:      console.log("📝 No previous view in history");
scripts/ui-statistics/viewControllers.js:463:  console.log("🎮 Initializing view controllers...");
scripts/ui-statistics/viewControllers.js:492:  console.log("✅ View controllers initialized");
scripts/ui-statistics/viewControllers.js:540:console.log('✅ viewControllers.js module loaded successfully');
scripts/uiBlocker.js:75:    console.log('🔒 UI blocked');
scripts/uiBlocker.js:93:    console.log('🔓 UI unblocked');
scripts/updateExpenseTable.js:20:console.log('👁️ Loading unified detail modals for view functionality...');
scripts/updateExpenseTable.js:25:      console.log('🎨 Refreshing expense table with transaction-style UI...');
scripts/updateExpenseTable.js:33:      console.log('🎨 Final refresh for expense table styling...');
scripts/updateExpenseTable.js:45:  console.log('🔄 Force refreshing expense table...');
scripts/updateExpenseTable.js:94:  console.log('🚫 FORCE: Removing internal scroll from expense containers...');
scripts/updateExpenseTable.js:114:        console.log(`🚫 Removed scroll from: ${selector}`);
scripts/updateExpenseTable.js:241:  console.log(`📄 Displayed ${paginatedExpenses.length} expenses (page ${currentPage}/${totalPages}) with pagination`);
scripts/updateExpenseTable.js:252:    console.log('🔍 DEBUG: Sample expense data structure:', expense);
scripts/updateExpenseTable.js:253:    console.log('🔍 Available keys:', Object.keys(expense));
scripts/updateExpenseTable.js:255:    console.log('📅 DEBUG: Renew date fields:', {
scripts/updateTable.js:57:  console.log('🔍 Transaction action:', action, 'Index:', globalIndex);
scripts/updateTable.js:69:  console.log('🔍 Found transaction:', {
scripts/updateTable.js:82:        console.log('🔍 View action - using globalIndex:', globalIndex);
scripts/updateTable.js:97:      console.log('🍪 Update cookie action triggered for index:', globalIndex);
scripts/updateTable.js:98:      console.log('🍪 Transaction:', transaction);
scripts/updateTable.js:99:      console.log('🍪 handleUpdateCookie function exists:', typeof window.handleUpdateCookie === 'function');
scripts/updateTable.js:307:  console.log("📌 BẮT ĐẦU HIỂN THỊ GIAO DỊCH");
scripts/updateTable.js:308:  console.log("🟢 Vai trò:", window.userInfo?.vaiTro);
scripts/updateTable.js:309:  console.log("🟢 isSearching:", window.isSearching);
scripts/updateTable.js:310:  console.log("🟢 todayFormatted:", todayFormatted);
scripts/updateTable.js:344:    console.log("🔍 Đang tìm kiếm - Tổng doanh thu:", totalRevenue);
scripts/updateTable.js:352:    console.log("📅 Không tìm kiếm - Tổng doanh thu hôm nay:", totalRevenue);
scripts/updateTable.js:485:      console.log('🔍 First transaction employee data:', {
scripts/updateTable.js:492:      console.log('🔍 Employee code determined:', employeeCode);
scripts/updateTable.js:589:  console.log("✅ Đã lưu totalRevenue:", totalRevenue);
scripts/updateTable.js:592:  console.log("✅ Đã lưu totalRevenue:", totalRevenue, "- Không hiển thị totals");
scripts/updateTableOptimized.js:173:        console.log(`🎯 Action selected: ${selected} for index: ${globalIndex}`);
scripts/updateTableOptimized.js:245:  console.log("✅ Total revenue calculated:", totalRevenue);
scripts/updateTableUltraFast.js:79:      console.log(`🔍 DEBUG Hoàn tiền - ID: ${transaction.transactionId}`);
scripts/updateTableUltraFast.js:80:      console.log(`   - index trong page: ${index}`);
scripts/updateTableUltraFast.js:81:      console.log(`   - startIndex: ${startIndex}`);
scripts/updateTableUltraFast.js:82:      console.log(`   - actualIndex tìm được: ${actualIndex}`);
scripts/updateTableUltraFast.js:83:      console.log(`   - dataIndex sẽ dùng: ${dataIndex}`);
scripts/updateTableUltraFast.js:84:      console.log(`   - transactionList.length: ${transactionList.length}`);
scripts/updateTableUltraFast.js:310:          console.log(`📌 Action select changed - action: ${action}, data-index: ${index}`);
scripts/updateTableUltraFast.js:311:          console.log(`   - window.isSearching: ${window.isSearching}`);
scripts/updateTableUltraFast.js:315:          console.log(`   - Using list with length: ${currentList.length}`);
scripts/updateTableUltraFast.js:316:          console.log(`   - window.transactionList.length: ${window.transactionList ? window.transactionList.length : 'undefined'}`);
scripts/updateTableUltraFast.js:317:          console.log(`   - transactionList (closure).length: ${transactionList.length}`);
scripts/updateTableUltraFast.js:451:  console.log(`🎯 handleTableAction called - action: ${action}, index: ${index}`);
scripts/updateTableUltraFast.js:452:  console.log(`   - transactionList.length: ${transactionList.length}`);
scripts/updateTableUltraFast.js:462:  console.log(`   - Transaction found: ${transaction.transactionId} - ${transaction.transactionType}`);
scripts/updateTableUltraFast.js:464:    console.log(`   🔍 Đây là giao dịch hoàn tiền!`);
scripts/updateTotalDisplay.js:9:  console.log("🔄 updateTotalDisplay - totals display đã bị xóa");
scripts/updateTotalDisplay.js:23:  console.log("✅ Đã khởi tạo updateTotalDisplay");
scripts/utils/cssOptimizer.js:21:      console.log('⚡ Critical CSS already loaded');
scripts/utils/cssOptimizer.js:38:      console.log('✅ Critical CSS loaded inline (', css.length, 'chars)');
scripts/utils/cssOptimizer.js:50:      console.log('⚡ CSS already loaded:', href);
scripts/utils/cssOptimizer.js:63:        console.log('✅ CSS loaded:', href);
scripts/utils/cssOptimizer.js:97:      console.log('⚡ CSS preloaded & applied:', href);
scripts/utils/cssOptimizer.js:119:      console.log('👁️ CSS will load when', triggerSelector, 'is visible');
scripts/utils/cssOptimizer.js:165:    console.log(`🗑️ Removed ${rulesToRemove.length} unused CSS rules`);
scripts/utils/cssOptimizer.js:177:        console.log('⚠️ Cannot optimize cross-origin stylesheet');
scripts/utils/cssOptimizer.js:202:  console.log('✅ CSS optimizations initialized');
scripts/utils/cssOptimizer.js:230:  console.log('⚡ Font loading optimized');
scripts/utils/cssOptimizer.js:249:  console.log('🔗 Resource hints added');
scripts/utils/lazyLoader.js:69:    console.log('⚡ Lazy loading chart:', chartContainer.id);
scripts/utils/lazyLoader.js:82:        console.log('📊 Chart initialized:', canvas.id);
scripts/utils/lazyLoader.js:94:    console.log('⚡ Lazy loading table:', tableContainer.id);
scripts/utils/lazyLoader.js:110:    console.log('⚡ Lazy loading element:', element.className);
scripts/utils/lazyLoader.js:130:    console.log(`👁️ Observing ${elements.length} lazy elements`);
scripts/utils/lazyLoader.js:156:  console.log('✅ Lazy loading initialized for overview report');
scripts/utils/lazyLoader.js:168:  console.log(`⚡ Preloaded ${criticalElements.length} critical elements`);
scripts/utils/performanceTester.js:29:    console.log(`⏱️ Started timing: ${name}`);
scripts/utils/performanceTester.js:50:    console.log(`✅ ${name}: ${duration.toFixed(2)}ms`);
scripts/utils/performanceTester.js:81:          console.log(`🎨 First Contentful Paint: ${entry.startTime.toFixed(2)}ms`);
scripts/utils/performanceTester.js:94:        console.log(`🖼️ Largest Contentful Paint: ${lastEntry.startTime.toFixed(2)}ms`);
scripts/utils/performanceTester.js:109:      console.log(`📐 Cumulative Layout Shift: ${cumulativeLayoutShift.toFixed(4)}`);
scripts/utils/performanceTester.js:123:          console.log(`📦 Resource loaded: ${entry.name.split('/').pop()} (${entry.duration.toFixed(2)}ms)`);
scripts/utils/performanceTester.js:154:    console.log('🧪 Testing template loading performance...');
scripts/utils/performanceTester.js:181:      console.log('✅ Template loading test completed');
scripts/utils/performanceTester.js:192:    console.log('🧪 Testing CSS loading performance...');
scripts/utils/performanceTester.js:228:    console.log('✅ CSS loading test completed');
scripts/utils/performanceTester.js:235:    console.log('🧪 Testing lazy loading performance...');
scripts/utils/performanceTester.js:277:    console.log(`✅ Lazy loading test completed (observed: ${observedCount})`);
scripts/utils/performanceTester.js:284:    console.log('🚀 Starting comprehensive performance test...');
scripts/utils/performanceTester.js:298:    console.log('🏁 Performance test completed');
scripts/utils/performanceTester.js:314:    console.log('Summary:', report.summary);
scripts/utils/performanceTester.js:372:    console.log(`⏱️ ${name}: ${(end - start).toFixed(2)}ms`);
scripts/versionManager.js:73:      console.log('Version check skipped:', error.message);
scripts/versionManager.js:118:        console.log('Service Worker registered:', registration);
