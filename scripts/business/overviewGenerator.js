/**
 * overviewGenerator.js
 * 
 * Business overview dashboard generation and rendering
 * Handles executive summary, financial performance, and dashboard header
 */

import { formatCurrency } from '../statisticsCore.js';

/**
 * Render dashboard header
 */
export function renderDashboardHeader(dateRange) {
  let periodLabel = 'T·∫•t c·∫£ th·ªùi gian';
  
  if (dateRange && dateRange.start && dateRange.end) {
    // Format dates for display
    const startDate = new Date(dateRange.start);
    const endDate = new Date(dateRange.end);
    
    const formatOptions = { day: '2-digit', month: '2-digit', year: 'numeric' };
    const startStr = startDate.toLocaleDateString('vi-VN', formatOptions);
    const endStr = endDate.toLocaleDateString('vi-VN', formatOptions);
    
    periodLabel = `${startStr} - ${endStr}`;
  }
    
  return `
    <div class="dashboard-header">
      <div class="header-content">
        <h1>T·ªïng Quan Kinh Doanh</h1>
        <div class="period-info">
          <span class="period-label">K·ª≥ b√°o c√°o: ${periodLabel}</span>
        </div>
        <div class="last-updated">C·∫≠p nh·∫≠t: ${new Date().toLocaleString('vi-VN')}</div>
      </div>
    </div>
  `;
}

/**
 * Render executive summary cards
 */
export function renderExecutiveSummary(metrics) {
  const { financial, revenue, kpis } = metrics;
  
  return `
    <div class="executive-summary">
      <h2>üìä T√≥m T·∫Øt ƒêi·ªÅu H√†nh</h2>
      <div class="summary-cards">
        
        <!-- Revenue Card -->
        <div class="summary-card revenue-card" data-tooltip="T·ªïng doanh thu trong k·ª≥ b√°o c√°o, bao g·ªìm t·∫•t c·∫£ c√°c giao d·ªãch ƒë√£ ho√†n t·∫•t. AOV (Average Order Value) l√† gi√° tr·ªã trung b√¨nh m·ªói ƒë∆°n h√†ng.">
          <div class="card-icon">üí∞</div>
          <div class="card-content">
            <h3>Doanh Thu</h3>
            <div class="primary-value">${formatCurrency(financial.totalRevenue, 'VND')}</div>
            <div class="secondary-info">
              <span data-tooltip="T·ªïng s·ªë giao d·ªãch ƒë√£ th·ª±c hi·ªán trong k·ª≥">${revenue.totalTransactions} giao d·ªãch</span>
              <span data-tooltip="Gi√° tr·ªã trung b√¨nh m·ªói giao d·ªãch (Average Order Value)">AOV: ${formatCurrency(revenue.averageOrderValue, 'VND')}</span>
            </div>
          </div>
          <div class="card-trend positive">‚ÜóÔ∏è +12%</div>
        </div>
        
        <!-- Profit Card -->
        <div class="summary-card profit-card ${financial.netProfit >= 0 ? 'positive' : 'negative'}" data-tooltip="L·ª£i nhu·∫≠n r√≤ng = Doanh thu - T·ªïng chi ph√≠. ƒê√¢y l√† s·ªë ti·ªÅn th·ª±c t·∫ø doanh nghi·ªáp ki·∫øm ƒë∆∞·ª£c sau khi tr·ª´ m·ªçi chi ph√≠.">
          <div class="card-icon">${financial.netProfit >= 0 ? 'üìà' : 'üìâ'}</div>
          <div class="card-content">
            <h3>L·ª£i Nhu·∫≠n R√≤ng</h3>
            <div class="primary-value">${formatCurrency(financial.netProfit, 'VND')}</div>
            <div class="secondary-info">
              <span data-tooltip="T·ª∑ su·∫•t l·ª£i nhu·∫≠n r√≤ng = (L·ª£i nhu·∫≠n r√≤ng / Doanh thu) x 100%">Margin: ${financial.profitMargin.toFixed(1)}%</span>
              <span data-tooltip="T·ª∑ su·∫•t l·ª£i nhu·∫≠n g·ªôp = ((Doanh thu - Gi√° v·ªën) / Doanh thu) x 100%">Gross: ${financial.grossMargin.toFixed(1)}%</span>
            </div>
          </div>
          <div class="card-trend ${financial.netProfit >= 0 ? 'positive' : 'negative'}">
            ${financial.netProfit >= 0 ? '‚ÜóÔ∏è' : '‚ÜòÔ∏è'} ${financial.profitMargin.toFixed(0)}%
          </div>
        </div>
        
        <!-- Daily Performance -->
        <div class="summary-card performance-card" data-tooltip="Hi·ªáu su·∫•t kinh doanh trung b√¨nh m·ªói ng√†y trong k·ª≥ b√°o c√°o">
          <div class="card-icon">üìÖ</div>
          <div class="card-content">
            <h3>Hi·ªáu Su·∫•t H√†ng Ng√†y</h3>
            <div class="primary-value" data-tooltip="Doanh thu trung b√¨nh m·ªói ng√†y">${formatCurrency(kpis.revenuePerDay, 'VND')}/ng√†y</div>
            <div class="secondary-info">
              <span data-tooltip="Chi ph√≠ v·∫≠n h√†nh trung b√¨nh m·ªói ng√†y (kh√¥ng bao g·ªìm chi ph√≠ c√° nh√¢n)">Burn Rate: ${formatCurrency(kpis.burnRate, 'VND')}/ng√†y</span>
              <span data-tooltip="L·ª£i nhu·∫≠n r√≤ng trung b√¨nh m·ªói ng√†y">Net: ${formatCurrency(kpis.revenuePerDay - kpis.burnRate, 'VND')}/ng√†y</span>
            </div>
          </div>
          <div class="card-trend neutral">üìä</div>
        </div>
        
        <!-- Cash Flow -->
        <div class="summary-card cashflow-card" data-tooltip="D√≤ng ti·ªÅn th·ªÉ hi·ªán l∆∞·ª£ng ti·ªÅn th·ª±c t·∫ø ra v√†o doanh nghi·ªáp trong k·ª≥">
          <div class="card-icon">üí∏</div>
          <div class="card-content">
            <h3>D√≤ng Ti·ªÅn</h3>
            <div class="primary-value" data-tooltip="D√≤ng ti·ªÅn r√≤ng = T·ªïng ti·ªÅn v√†o - T·ªïng ti·ªÅn ra">${formatCurrency(metrics.cashFlow.netCashFlow, 'VND')}</div>
            <div class="secondary-info">
              <span data-tooltip="D√≤ng ti·ªÅn t·ª´ ho·∫°t ƒë·ªông kinh doanh ch√≠nh">Operating: ${formatCurrency(metrics.cashFlow.operatingCashFlow, 'VND')}</span>
              <span data-tooltip="D√≤ng ti·ªÅn t·ª± do sau khi tr·ª´ chi ph√≠ ƒë·∫ßu t∆∞">Free: ${formatCurrency(metrics.cashFlow.freeCashFlow, 'VND')}</span>
            </div>
          </div>
          <div class="card-trend ${metrics.cashFlow.netCashFlow >= 0 ? 'positive' : 'negative'}">
            ${metrics.cashFlow.netCashFlow >= 0 ? 'üí™' : '‚ö†Ô∏è'}
          </div>
        </div>
        
      </div>
    </div>
  `;
}

/**
 * Render financial performance section
 */
export function renderFinancialPerformance(metrics) {
  return `
    <div class="financial-performance">
      <h2>üíπ Hi·ªáu Su·∫•t T√†i Ch√≠nh</h2>
      <div class="performance-grid">
        
        <!-- P&L Summary -->
        <div class="performance-card pnl-card">
          <h3>üìã B√°o C√°o L√£i L·ªó</h3>
          <div class="pnl-items">
            <div class="pnl-item revenue" data-tooltip="T·ªïng ti·ªÅn thu ƒë∆∞·ª£c t·ª´ c√°c giao d·ªãch ƒë√£ ho√†n t·∫•t v√† d·ªãch v·ª• trong k·ª≥">
              <span class="label">Doanh thu</span>
              <span class="value positive">${formatCurrency(metrics.financial.totalRevenue, 'VND')}</span>
            </div>
            <div class="pnl-item cogs" data-tooltip="Chi ph√≠ tr·ª±c ti·∫øp ƒë·ªÉ t·∫°o ra s·∫£n ph·∫©m/d·ªãch v·ª• ƒë√£ ho√†n t·∫•t (Cost of Goods Sold)">
              <span class="label">Gi√° v·ªën h√†ng b√°n (COGS)</span>
              <span class="value negative">-${formatCurrency(metrics.costs.costOfRevenue, 'VND')}</span>
            </div>
            <div class="pnl-item gross-profit" data-tooltip="L·ª£i nhu·∫≠n g·ªôp = Doanh thu - Gi√° v·ªën. S·ªë ti·ªÅn c√≤n l·∫°i ƒë·ªÉ chi tr·∫£ chi ph√≠ v·∫≠n h√†nh">
              <span class="label">L·ª£i nhu·∫≠n g·ªôp</span>
              <span class="value ${metrics.financial.grossProfit >= 0 ? 'positive' : 'negative'}">
                ${formatCurrency(metrics.financial.grossProfit, 'VND')}
              </span>
            </div>
            <div class="pnl-item operating" data-tooltip="Chi ph√≠ v·∫≠n h√†nh h√†ng ng√†y nh∆∞ l∆∞∆°ng, thu√™ m·∫∑t b·∫±ng, marketing, h√†nh ch√≠nh (Operating Expenses)">
              <span class="label">Chi ph√≠ v·∫≠n h√†nh (OPEX)</span>
              <span class="value negative">-${formatCurrency(metrics.costs.operating, 'VND')}</span>
            </div>
            <div class="pnl-item net-profit" data-tooltip="L·ª£i nhu·∫≠n cu·ªëi c√πng sau khi tr·ª´ t·∫•t c·∫£ chi ph√≠. ƒê√¢y l√† s·ªë ti·ªÅn th·ª±c s·ª± ki·∫øm ƒë∆∞·ª£c">
              <span class="label">L·ª£i nhu·∫≠n r√≤ng</span>
              <span class="value ${metrics.financial.netProfit >= 0 ? 'positive' : 'negative'}">
                ${formatCurrency(metrics.financial.netProfit, 'VND')}
              </span>
            </div>
          </div>
        </div>
        
        <!-- Key Ratios -->
        <div class="performance-card ratios-card">
          <h3>üìä Ch·ªâ S·ªë Quan Tr·ªçng</h3>
          <div class="ratio-items">
            <div class="ratio-item" data-tooltip="T·ª∑ su·∫•t l·ª£i nhu·∫≠n g·ªôp cho bi·∫øt b·∫°n gi·ªØ l·∫°i ƒë∆∞·ª£c bao nhi√™u % doanh thu sau khi tr·ª´ gi√° v·ªën h√†ng b√°n. C√†ng cao c√†ng t·ªët.">
              <div class="ratio-label">T·ª∑ su·∫•t l·ª£i nhu·∫≠n g·ªôp</div>
              <div class="ratio-value">${metrics.financial.grossMargin.toFixed(1)}%</div>
              <div class="ratio-bar">
                <div class="ratio-fill" style="width: ${Math.min(metrics.financial.grossMargin, 100)}%"></div>
              </div>
            </div>
            <div class="ratio-item" data-tooltip="T·ª∑ su·∫•t l·ª£i nhu·∫≠n r√≤ng cho bi·∫øt b·∫°n gi·ªØ l·∫°i ƒë∆∞·ª£c bao nhi√™u % doanh thu sau khi tr·ª´ T·∫§T C·∫¢ chi ph√≠. ƒê√¢y l√† ch·ªâ s·ªë quan tr·ªçng nh·∫•t.">
              <div class="ratio-label">T·ª∑ su·∫•t l·ª£i nhu·∫≠n r√≤ng</div>
              <div class="ratio-value">${metrics.financial.profitMargin.toFixed(1)}%</div>
              <div class="ratio-bar">
                <div class="ratio-fill" style="width: ${Math.min(Math.abs(metrics.financial.profitMargin), 100)}%"></div>
              </div>
            </div>
            <div class="ratio-item" data-tooltip="T·ª∑ l·ªá chi ph√≠ v·∫≠n h√†nh so v·ªõi doanh thu. C√†ng th·∫•p c√†ng t·ªët, d∆∞·ªõi 70% l√† t·ªët, d∆∞·ªõi 50% l√† xu·∫•t s·∫Øc.">
              <div class="ratio-label">Hi·ªáu qu·∫£ chi ph√≠</div>
              <div class="ratio-value">${metrics.efficiency.costEfficiencyRatio.toFixed(1)}%</div>
              <div class="ratio-bar">
                <div class="ratio-fill" style="width: ${Math.min(metrics.efficiency.costEfficiencyRatio, 100)}%"></div>
              </div>
            </div>
          </div>
        </div>
        
      </div>
    </div>
  `;
}

/**
 * Add interactivity to dashboard
 */
export async function addBusinessDashboardInteractivity(metrics) {
  // Add hover effects and click handlers
  document.querySelectorAll('.summary-card').forEach(card => {
    card.addEventListener('mouseenter', () => {
      card.style.transform = 'translateY(-2px)';
    });
    card.addEventListener('mouseleave', () => {
      card.style.transform = 'translateY(0)';
    });
  });
  
  
  // Initialize tooltip functionality
  initializeTooltips();
  
  // console.log("‚úÖ Business dashboard interactivity added");
}

/**
 * Initialize tooltip functionality
 */
function initializeTooltips() {
  // Add tooltip functionality for touch devices
  const tooltipElements = document.querySelectorAll('[data-tooltip]');
  
  tooltipElements.forEach(element => {
    // For touch devices, show tooltip on tap
    element.addEventListener('touchstart', (e) => {
      e.preventDefault();
      showTooltip(element);
      
      // Hide after 3 seconds
      setTimeout(() => {
        hideTooltip(element);
      }, 3000);
    });
  });
  
  // console.log("‚úÖ Tooltips initialized for", tooltipElements.length, "elements");
}

/**
 * Show tooltip programmatically
 */
function showTooltip(element) {
  element.classList.add('tooltip-active');
}

/**
 * Hide tooltip programmatically
 */
function hideTooltip(element) {
  element.classList.remove('tooltip-active');
}